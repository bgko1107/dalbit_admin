<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.content.dao.Con_EventDao" >

    <select id="callEventList" parameterType="com.dalbit.content.vo.procedure.P_EventListInputVo" resultType="com.dalbit.content.vo.procedure.P_EventListOutputVo">
        select @rownum := @rownum + 1 as rowNum, a.*
                ,(select count(*) from rd_data.tb_member_basic where mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx)) mem_cnt
                ,(select count(*) from rd_data.tb_member_basic where mem_sex = 'm' and mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx)) male_cnt
                ,(select count(*) from rd_data.tb_member_basic where mem_sex = 'f' and mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx)) female_cnt
           from ( select if(start_datetime > now(),'대기 중','진행중') as state ,b.*
                    From rd_admin.tb_event_basic b, (select @rownum := #{pageNo} ) AS d
                   where end_datetime >= now()
                     and event_title like concat('%', #{searchText}, '%')
                   order by reg_date desc
                    limit #{pageNo}, #{pageCnt}) a
    </select>
    <select id="callEventList_totalCnt" parameterType="com.dalbit.content.vo.procedure.P_EventListInputVo" resultType="integer">
       select count(*) From rd_admin.tb_event_basic where end_datetime >= now()
    </select>

    <select id="callEventList_End" parameterType="com.dalbit.content.vo.procedure.P_EventListInputVo" resultType="com.dalbit.content.vo.procedure.P_EventListOutputVo">
        select @rownum := @rownum + 1 as rowNum, a.*
                ,(select count(*) from rd_data.tb_member_basic where mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx)) mem_cnt
                ,(select count(*) from rd_data.tb_member_basic where mem_sex = 'm' and mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx)) male_cnt
                ,(select count(*) from rd_data.tb_member_basic where mem_sex = 'f' and mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx)) female_cnt
                ,(select count(*) from rd_data.tb_member_basic where mem_no in (select mem_no From rd_admin.tb_event_member b where event_idx = a.idx and is_win='1')) as win_cnt
          from ( select '마감' as state ,b.*
                   From rd_admin.tb_event_basic b, (select @rownum := #{pageNo} ) AS d
                  where end_datetime <![CDATA[<]]> now()
                    and event_title like concat('%', #{searchText}, '%')
                  order by reg_date desc
                   limit #{pageNo}, #{pageCnt}) a
    </select>
    <select id="callEventList_End_totalCnt" parameterType="com.dalbit.content.vo.procedure.P_EventListInputVo" resultType="integer">
       select count(*) From rd_admin.tb_event_basic where end_datetime  <![CDATA[<]]>  now()
    </select>

    <update id="callEventDelete" parameterType="com.dalbit.content.vo.procedure.P_EventDeleteVo">
        /* Con_Event.xml - callEventDelete */
        delete from rd_admin.tb_event_basic
         where idx=#{idx}
    </update>

    <update id="callEventMemberDelete" parameterType="com.dalbit.content.vo.procedure.P_EventDeleteVo">
        /* Con_Event.xml - callEventDelete */
        delete from rd_admin.tb_event_member
         where event_idx=#{idx}
    </update>

    <!-- 이벤트 정보 등록/수정 -->
    <insert id="callEventInsert" parameterType="com.dalbit.content.vo.procedure.P_EventUpdateVo">
        /* Con_Event.xml - callEventInsert */
        insert into rd_admin.tb_event_basic
          (event_title,start_datetime,end_datetime,view_start_datetime,view_end_datetime,platform,event_slct,is_pop,is_view,is_reply,
           pc_img_url,pc_link_url,mobile_img_url,mobile_link_url,thumb_img_url,`desc`,reg_date,op_name,last_upd_date,last_op_name)
        value
          (#{event_title},STR_TO_DATE(#{start_datetime},'%Y%m%d %H%i%S'),STR_TO_DATE(#{end_datetime},'%Y%m%d %H%i%S'),STR_TO_DATE(#{view_start_datetime},'%Y%m%d %H%i%S'),STR_TO_DATE(#{view_end_datetime},'%Y%m%d %H%i%S'),#{platform},#{loginType},#{viewType},#{viewYn},#{is_reply},
           #{pc_img_url},#{pc_link_url},#{mobile_img_url},#{mobile_link_url},#{thumb_img_url},#{desc},now(),#{opName},now(),#{opName})
    </insert>

    <update id="callEventUpdate" parameterType="com.dalbit.content.vo.procedure.P_EventUpdateVo">
        /* Con_Event.xml - callEventUpdate */
        update rd_admin.tb_event_basic
            set event_title = #{event_title},
                 start_datetime = STR_TO_DATE(#{start_datetime},'%Y%m%d %H%i%S'),
                 end_datetime = STR_TO_DATE(#{end_datetime},'%Y%m%d %H%i%S'),
                 view_start_datetime = STR_TO_DATE(#{view_start_datetime},'%Y%m%d %H%i%S'),
                 view_end_datetime = STR_TO_DATE(#{view_end_datetime},'%Y%m%d %H%i%S'),
                 platform = #{platform},
                 event_slct = #{loginType},
                 is_pop = #{viewType},
                 is_view = #{viewYn},
                 is_reply = #{is_reply},
                 pc_img_url = #{pc_img_url},
                 pc_link_url = #{pc_link_url},
                 mobile_img_url = #{mobile_img_url},
                 mobile_link_url = #{mobile_link_url},
                 thumb_img_url = #{thumb_img_url},
                 `desc` = #{desc},
                 last_upd_date=now(),
                 last_op_name = #{opName}
         where idx=#{idx}
    </update>

    <!--이벤트 응모자 목록 -->
    <select id="callEventMemberList" parameterType="com.dalbit.content.vo.procedure.P_EventMemberListInputVo" resultType="com.dalbit.content.vo.procedure.P_EventMemberListOutputVo">
        /* Con_Event.xml - callEventMemberList */
        select  @rownum := @rownum + 1 as rowNum, a.*
          from ( select b.event_idx
                        ,b.mem_no
                        ,b.is_win
                        ,b.order
                        ,(select mem_userid from rd_data.tb_member_basic where mem_no = b.mem_no) as mem_userid
                        ,(select mem_nick from rd_data.tb_member_basic where mem_no = b.mem_no) as mem_nick
                        ,(select mem_sex from rd_data.tb_member_basic where mem_no = b.mem_no) as mem_sex
                        ,(select mem_phone from rd_data.tb_member_basic where mem_no = b.mem_no) as mem_phone
                        ,(select count(*) from rd_data.tb_broadcast_room_member where mem_no=b.mem_no and auth <![CDATA[<]]>  3) as listenCnt
                        ,(select count(*) from rd_data.tb_broadcast_room where mem_no=b.mem_no) as broadCnt
                        ,(select count(*) From rd_data.tb_member_broadcast_item where mem_no=b.mem_no or gifted_mem_no=b.mem_no) as giftCnt
                        ,sum(1) as applyCnt
                  From rd_admin.tb_event_member b
                 where event_idx=#{event_idx}
                 group by event_idx,mem_no,`order`, mem_userid,mem_nick, mem_sex, mem_phone, listenCnt, broadCnt, giftCnt
                 order by mem_no limit #{pageNo}, #{pageCnt}) a, (select @rownum := #{pageNo} ) AS d
    </select>
    <select id="callEventMemberList_totalCnt" parameterType="com.dalbit.content.vo.procedure.P_EventListInputVo" resultType="integer">
        /* Con_Event.xml - callEventList_totalCnt */
        select count(*) totalCnt From (select distinct mem_no From rd_admin.tb_event_member b where event_idx=#{event_idx}) a
    </select>
    <select id="callEventMemberList_winCnt" parameterType="String" resultType="integer">
        /* Con_Event.xml - callEventMemberList_winCnt */
        select count(*) winCnt from rd_admin.tb_event_member where mem_no=#{mem_no} and is_win =0
    </select>


    <update id="callEventSelWIn" parameterType="com.dalbit.content.vo.procedure.P_EventMemberSelWinVo">
        /* Con_Event.xml - callEventSelWIn */
       update rd_admin.tb_event_member set is_win=1, `order`=#{choiceNum}, op_name=#{opName}, reg_date=now() where event_idx=#{event_idx} and mem_no=#{mem_no}
    </update>

    <!--이벤트 중복 응모자 목록 -->
    <select id="callEventOverlapApplyList" parameterType="com.dalbit.content.vo.procedure.P_EventMemberListInputVo" resultType="com.dalbit.content.vo.procedure.P_EventMemberListOutputVo">
        /* Con_Event.xml - callEventOverlapApplyList */
        select b.mem_no
                ,(select mem_userid FROM rd_data.tb_member_basic WHERE mem_no = b.mem_no) as mem_userid
                ,(select mem_nick FROM rd_data.tb_member_basic WHERE mem_no = b.mem_no) as mem_nick
                ,enter_date
           from rd_admin.tb_event_member b
          where event_idx=#{event_idx}
            and mem_no=#{mem_no}
        order by enter_date desc
    </select>

    <!--이벤트 댓글 목록 -->
    <select id="callEventReplyList" parameterType="com.dalbit.content.vo.procedure.P_EventReplyListInputVo" resultType="com.dalbit.content.vo.procedure.P_EventReplyListOutputVo">
        /* Con_Event.xml - callEventReplyList */
    SELECT  @rownum := @rownum + 1 as rowNum, a.*
          FROM (
              SELECT
                    a.idx AS reply_idx
                    ,a.event_idx AS event_idx
                    ,a.mem_no AS write_mem_no
                    ,a.depth AS depth
                    ,a.contents AS contents
                    ,a.status AS status
                    ,a.reg_date AS writeDate
                    ,a.op_name AS op_name
                    ,a.last_upd_date AS updateDate
                    ,mb.mem_userId AS userId
                    ,mb.mem_nick AS nickName
                    ,mb.mem_sex AS memSex
                    ,(SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.mem_no) AS profileImage
                    ,mv.level AS level
                    ,mv.grade AS grade
                    ,c.applyCnt AS applyCnt
                FROM
                    rd_admin.tb_event_reply AS a
                LEFT JOIN
                    rd_data.tb_member_basic AS mb
                ON
                    a.mem_no = mb.mem_no
                LEFT JOIN
                    rd_data.tb_member_level AS mv
                ON
                    a.mem_no = mv.mem_no
				LEFT JOIN
					(SELECT mem_no, COUNT(*) as applyCnt FROM rd_admin.tb_event_reply WHERE event_idx = #{event_idx} AND depth = 1 AND status = 1 GROUP BY mem_no HAVING COUNT(*) > 0) AS c
				ON
					a.mem_no = c.mem_no
                WHERE
                    a.event_idx = #{event_idx}
                    AND a.depth = 1
                    AND a.status = 1
                ORDER BY
                    a.idx desc
                LIMIT #{pageStart}, #{pageCnt}
          ) a
          , (select @rownum := #{pageStart} ) AS d
    </select>


    <select id="callEventReplyList_totalCnt" parameterType="com.dalbit.content.vo.procedure.P_EventReplyListInputVo" resultType="Integer">
        /* Con_Event.xml - callEventReplyList_totalCnt */
        SELECT
            COUNT(*) AS totalCnt
        FROM
            rd_admin.tb_event_reply AS a
        LEFT JOIN
            rd_data.tb_member_basic AS mb
        ON
            a.mem_no = mb.mem_no
        LEFT JOIN
            rd_data.tb_member_level AS mv
        ON
            a.mem_no = mv.mem_no
        WHERE
            a.event_idx = ${event_idx}
            AND a.depth = 1
            AND a.status = 1
    </select>


    <!--이벤트 댓글 삭제 -->
    <update id="callEventReplyDelete" parameterType="com.dalbit.content.vo.procedure.P_EventReplyDeleteInputVo">
        /* Con_Event.xml - callEventReplyDelete */
        UPDATE rd_admin.tb_event_reply
        SET
          status = 2
          ,op_name = #{opName}
          ,last_upd_date = NOW()
        WHERE
          idx = #{reply_idx}
          AND event_idx = #{event_idx}
    </update>

    <sql id="attendanceCondition">
        select
              bas.mem_state as mem_state
              , pro.image_profile as image_profile
              , att.mem_no as mem_no
              , bas.mem_userid as mem_userid
              , bas.mem_nick as mem_nick
              , bas.mem_sex as mem_sex
              , att.the_day as the_day
              , att.last_upd_date as last_upd_date
              , att.reward_exp as reward_exp
              , att.reward_dal as reward_dal
              , @RNUM := @RNUM + 1 as rowNum
        from rd_data.tb_member_attendance_check att
            , rd_data.tb_member_basic bas
            , rd_data.tb_member_profile pro
            , (select @RNUM := 0) r
        where att.mem_no = bas.mem_no
          and att.mem_no = pro.mem_no
          and check_ok = '1'
              <if test='txt_startSel != null and txt_startSel != ""'>
                  and att.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{txt_startSel}, '%Y-%m-%d 00:00:00')
              </if>
              <if test='txt_endSel != null and txt_endSel != ""'>
                  and att.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{txt_endSel}, '%Y-%m-%d 23:59:59')
              </if>
              <if test='the_day != null and the_day != ""'>
                  <choose>
                      <when test='the_day =="1"'>
                          and att.the_day = 9
                      </when>
                      <when test='the_day == "2"'>
                          and att.the_day in (0,1,2,3,4,5,6)
                      </when>
                      <otherwise>
                          and att.the_day in (0,1,2,3,4,5,6,9)
                      </otherwise>
                  </choose>
              </if>
              <if test='txt_search != null and txt_search != ""'>
                 <choose>
                     <when test='searchType == "1"'>
                        and att.mem_no like concat ('%', #{txt_search}, '%')
                     </when>
                     <when test='searchType == "2"'>
                        and bas.mem_userid like concat ('%', #{txt_search}, '%')
                     </when>
                     <when test='searchType == "3"'>
                         and bas.mem_nick like concat ('%', #{txt_search}, '%')
                     </when>
                     <otherwise>
                         and (att.mem_no like concat ('%', #{txt_search}, '%')
                              or bas.mem_userid like concat('%', #{txt_search}, '%')
                              or bas.mem_nick like concat('%', #{txt_search}, '%')
                              )
                     </otherwise>
                 </choose>
              </if>
        order by att.last_upd_date desc
    </sql>

    <select id="selectAttendanceList" parameterType="com.dalbit.content.vo.AttendanceVo" resultType="com.dalbit.content.vo.AttendanceVo">
        /* Con_Event.xml - selectAttendanceList */
        select *
        from (
          <include refid="attendanceCondition"/>
        ) a
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="selectAttendanceListCnt" parameterType="com.dalbit.content.vo.AttendanceVo" resultType="integer">
        /* Con_Event.xml - selectAttendanceListCnt */
        select
          count(*)
        from (
          <include refid="attendanceCondition"/>
        ) a
    </select>

    <select id="selectAttendanceCalendarList" parameterType="com.dalbit.content.vo.AttendanceCalendarVo" resultType="com.dalbit.content.vo.AttendanceCalendarVo">
        /* Con_Event.xml - selectAttendanceCalendarList */
        select the_date
             , (select count(distinct mem_no) from rd_data.tb_member_attendance_check where check_ok = 1 and the_day != 9 and #{search_startDate} <![CDATA[<=]]> the_date and the_date <![CDATA[<=]]> #{search_endDate}) joinCnt
             , count(the_date) joinSum
             , sum(reward_exp) expSum
             , sum(reward_dal) dalSum
             , sum(sex_man) sex_man
             , sum(sex_female) sex_female
             , sum(sex_unknown) sex_unknown
        from (
             select attendance.the_date
                  , attendance.reward_exp
                  , attendance.reward_dal
                  , if(basic.mem_sex = 'm', 1, 0) sex_man
                  , if(basic.mem_sex = 'f', 1, 0) sex_female
                  , if(basic.mem_sex = 'n', 1, 0) sex_unknown
             from rd_data.tb_member_attendance_check attendance
                , rd_data.tb_member_basic basic
             where attendance.check_ok = 1
               and attendance.mem_no = basic.mem_no
               and #{search_startDate} <![CDATA[<=]]> the_date
               and the_date <![CDATA[<=]]> #{search_endDate}
               and the_day != 9
         ) attendance
        group by attendance.the_date
    </select>
</mapper>