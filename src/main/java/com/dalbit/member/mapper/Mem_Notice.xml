<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.member.dao.Mem_NoticeDao" >

    <!--<select id="callNoticeHistory" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.member.vo.procedure.P_MemberNoticeOutputVo">-->
        <!--/* Mem_Noticet.xml - callNoticeHistory */-->
        <!--call rd_admin.sp_admin_member_notice_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})-->
    <!--</select>-->

    <sql id="storyCondition">
        <if test="searchType == 1 or searchType == 0 or searchType == 3">
        select a.idx
                    , '1' as type
                    , b.mem_no
                    , b.mem_nick
                    , b.mem_sex
                    , b.mem_birth_year
                    ,'-' as room_no
                    ,'-' as title
                    , a.last_upd_date
                    , a.contents
              From rd_data.tb_member_broadcast_notice a
              left join rd_data.tb_member_basic b on a.mem_no = b.mem_no
             where (b.mem_no like CONCAT('%',#{mem_no},'%') OR b.mem_userid like CONCAT('%',#{mem_no},'%') OR b.mem_nick like CONCAT('%',#{mem_no},'%'))
                <if test='sDate != null and sDate !=""'>
                    and a.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{sDate}, '%Y.%m.%d 00:00:00')
                    and a.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{eDate}, '%Y.%m.%d 23:59:59')
                </if>
        </if>
        <if test="searchType == 0 or searchType == 3">
             union
        </if>
        <if test="searchType == 2 or searchType == 0 or searchType == 3">
            select a.idx
                    , '2' as type
                    , b.mem_no
                    , b.mem_nick
                    , b.mem_sex
                    , b.mem_birth_year
                    , a.room_no
                    , a.title
                    , a.last_upd_date
                    , a.notice as contents
              From rd_data.tb_broadcast_room a
              left join rd_data.tb_member_basic b on a.mem_no = b.mem_no
             where CHAR_LENGTH(a.notice) > 0
               and (b.mem_no like CONCAT('%',#{mem_no},'%') OR b.mem_userid like CONCAT('%',#{mem_no},'%') OR b.mem_nick like CONCAT('%',#{mem_no},'%'))
                <if test='sDate != null and sDate !=""'>
                    and a.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{sDate}, '%Y.%m.%d 00:00:00')
                    and a.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{eDate}, '%Y.%m.%d 23:59:59')
                </if>
        </if>
    </sql>

    <select id="callNoticeHistory" parameterType="com.dalbit.member.vo.procedure.P_MemberNoticeInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberNoticeOutputVo">
      select
          @rownum := @rownum + 1 as rowNum,
          c.*
        FROM (
          <include refid="storyCondition"/>
        ) AS c, (select @rownum := #{pageNo} ) AS d
        <if test="searchType == 0">
          order by last_upd_date desc
        </if>
        <if test="searchType == 3">
          order by last_upd_date asc
        </if>
        limit #{pageNo}, #{pageCnt}
    </select>

    <select id="callNoticeHistory_totalCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberNoticeInputVo" resultType="integer">
        select count(*) totalCnt
          From (
          <include refid="storyCondition"/>
            ) a
    </select>

    <select id="selectNoticeSummary" parameterType="com.dalbit.member.vo.procedure.P_MemberNoticeInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberNoticeOutputVo">
        select count(*) totalCnt
                ,sum(if(mem_sex = 'm',1,0)) as maleCnt
                ,sum(if(mem_sex = 'f',1,0)) as femaleCnt
                ,sum(if(mem_sex = 'n',1,0)) as noneCnt
          From (
          <include refid="storyCondition"/>
            ) a
    </select>

    <delete id="callMemberNoticeDelete" parameterType="com.dalbit.member.vo.procedure.P_MemberNoticeDeleteVo">
         delete from rd_data.tb_member_broadcast_notice where idx=#{idx}
    </delete>
    <update id="callBroadNoticeDelete" parameterType="com.dalbit.member.vo.procedure.P_MemberNoticeDeleteVo">
         update rd_data.tb_broadcast_room set notice='', last_upd_date = now() where idx=#{idx}
    </update>

</mapper>