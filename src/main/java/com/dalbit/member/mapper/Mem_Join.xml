<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.member.dao.Mem_JoinDao" >

    <select id="callJoinList" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select @rownum := @rownum + 1 as rowNum, c.*
          from ( select if(a.inner = 1 ,'Test',null) testId
                        ,a.*
                   From rd_data.tb_member_basic a
                   <if test="period != 4 and period != 3">
                      where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d') and DATE_FORMAT(mem_join_date, '%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
                   </if>
                   <if test="period == 3 or period == 4">
                       where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d')
                   </if>
                    <if test="testid != -1">
                        and a.inner = 0
                    </if>
                    <if test="memJoinPath == 1">
                        and a.join_path is not null
                        and a.join_path != ''
                    </if>
                    and (mem_no like concat('%', #{searchText}, '%')
                       or mem_name like concat('%', #{searchText}, '%')
                       or mem_userid like concat('%', #{searchText}, '%')
                       or mem_nick like concat('%', #{searchText}, '%')
                       or mem_phone like concat('%', #{searchText}, '%')
                       or mem_id like concat('%', #{searchText}, '%'))
                )as c, (select @rownum := #{pageNo} ) AS d

        <if test="memJoinDateSort == 0"> order by mem_join_date desc </if>
        <if test="memJoinDateSort == 1"> order by mem_join_date asc </if>
        <if test="memNickSort == 0"> order by mem_nick desc </if>
        <if test="memNickSort == 1"> order by mem_nick asc </if>
        <if test="memLoginIdSort == 0"> order by mem_id desc </if>
        <if test="memLoginIdSort == 1"> order by mem_id asc </if>
        <if test="memIpSort == 0"> order by ip desc </if>
        <if test="memIpSort == 1"> order by ip asc </if>
        <if test="memJoinDateSort == -1 and memNickSort == -1 and memLoginIdSort == -1 and memIpSort == -1">
          order by mem_join_date desc
        </if>

         limit #{pageNo}, #{pageCnt}
    </select>

    <select id="callJoinList_totalCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="integer">
        select count(*) totalCnt From rd_data.tb_member_basic a
            <if test="period != 4 and period != 3">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d') and DATE_FORMAT(mem_join_date, '%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
            </if>
            <if test="period == 3 or period == 4">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            </if>
            <if test="testid != -1">
                and a.inner = 0
            </if>
            <if test="memJoinPath == 1">
                and a.join_path is not null
                and a.join_path != ''
            </if>
            and (mem_no like concat('%', #{searchText}, '%')
                or mem_name like concat('%', #{searchText}, '%')
                or mem_userid like concat('%', #{searchText}, '%')
                or mem_nick like concat('%', #{searchText}, '%')
                or mem_phone like concat('%', #{searchText}, '%')
                or mem_id like concat('%', #{searchText}, '%'))
    </select>

    <select id="callJoinList_slctCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select count(*) as allCnt
                ,count(case when mem_slct = 'p' then 1 end) as slctPhonCnt
                ,count(case when mem_slct = 'f' then 1 end) as slctFaceCnt
                ,count(case when mem_slct = 'g' then 1 end) as slctGoogleCnt
                ,count(case when mem_slct = 'k' then 1 end) as slctKakaoCnt
                ,count(case when mem_slct = 'n' then 1 end) as slctNaverCnt
                ,count(case when mem_slct = 'i' then 1 end) as slctAppleCnt
         From rd_data.tb_member_basic a
            <if test="period != 4 and period != 3">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d') and DATE_FORMAT(mem_join_date, '%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
            </if>
            <if test="period == 3 or period == 4">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            </if>
            <if test="testid != -1">
                and a.inner = 0
            </if>
    </select>


    <select id="callWithdrawalList" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select @rownum := @rownum + 1 as rowNum, c.*
          from ( select if(a.inner = 1 ,'Test',null) testId
                        ,a.*
                   From rd_data.tb_member_withdrawal_bak a
                   <if test="period != 4 and period != 3">
                      where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d') and DATE_FORMAT(mem_join_date, '%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
                   </if>
                   <if test="period == 3 or period == 4">
                       where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d')
                   </if>
                   <if test="testid != -1">
                       and a.inner = 0
                   </if>
                   <if test="memJoinPath == 1">
                       and a.join_path is not null
                       and a.join_path != ''
                   </if>
                   and (mem_no like concat('%', #{searchText}, '%')
                       or mem_name like concat('%', #{searchText}, '%')
                       or mem_userid like concat('%', #{searchText}, '%')
                       or mem_nick like concat('%', #{searchText}, '%')
                       or mem_phone like concat('%', #{searchText}, '%')
                       or mem_id like concat('%', #{searchText}, '%'))
                )as c, (select @rownum := #{pageNo} ) AS d

        <if test="memJoinDateSort_withdrawal == 0"> order by mem_join_date desc </if>
        <if test="memJoinDateSort_withdrawal == 1"> order by mem_join_date asc </if>
        <if test="memNickSort_withdrawal == 0"> order by mem_nick desc </if>
        <if test="memNickSort_withdrawal == 1"> order by mem_nick asc </if>
        <if test="memLoginIdSort_withdrawal == 0"> order by mem_id desc </if>
        <if test="memLoginIdSort_withdrawal == 1"> order by mem_id asc </if>
        <if test="memIpSort_withdrawal == 0"> order by ip desc </if>
        <if test="memIpSort_withdrawal == 1"> order by ip asc </if>
        <if test="memJoinDateSort_withdrawal == -1 and memNickSort_withdrawal == -1 and memLoginIdSort_withdrawal == -1 and memIpSort_withdrawal == -1">
            order by mem_join_date desc
        </if>

         limit #{pageNo}, #{pageCnt}
    </select>

    <select id="callWithdrawalList_totalCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="integer">
        select count(*) totalCnt From rd_data.tb_member_withdrawal_bak a
            <if test="period != 4 and period != 3">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d') and DATE_FORMAT(mem_join_date, '%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
            </if>
            <if test="period == 3 or period == 4">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            </if>
            <if test="testid != -1">
                and a.inner = 0
            </if>
            <if test="memJoinPath == 1">
                and a.join_path is not null
                and a.join_path != ''
            </if>
            and (mem_no like concat('%', #{searchText}, '%')
                or mem_name like concat('%', #{searchText}, '%')
                or mem_userid like concat('%', #{searchText}, '%')
                or mem_nick like concat('%', #{searchText}, '%')
                or mem_phone like concat('%', #{searchText}, '%')
                or mem_id like concat('%', #{searchText}, '%'))
    </select>

    <select id="callWithdrawalList_slctCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select count(*) as allCnt
                ,count(case when mem_slct = 'p' then 1 end) as slctPhonCnt
                ,count(case when mem_slct = 'f' then 1 end) as slctFaceCnt
                ,count(case when mem_slct = 'g' then 1 end) as slctGoogleCnt
                ,count(case when mem_slct = 'k' then 1 end) as slctKakaoCnt
                ,count(case when mem_slct = 'n' then 1 end) as slctNaverCnt
                ,count(case when mem_slct = 'i' then 1 end) as slctAppleCnt
         From rd_data.tb_member_withdrawal_bak a
            <if test="period != 4 and period != 3">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d') and DATE_FORMAT(mem_join_date, '%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
            </if>
            <if test="period == 3 or period == 4">
                where DATE_FORMAT(mem_join_date, '%Y%m%d') >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            </if>
            <if test="testid != -1">
                and a.inner = 0
            </if>
    </select>

</mapper>