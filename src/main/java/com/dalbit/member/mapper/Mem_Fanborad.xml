<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.member.dao.Mem_FanboardDao" >

    <!--<select id="callFanboardHistory" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.member.vo.procedure.P_MemberFanboardOutputVo">-->
        <!--/* Mem_Fanboardt.xml - callFanboardHistory */-->
        <!--call rd_admin.sp_admin_member_fanboard_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})-->
    <!--</select>-->

    <select id="callFanboardHistory" parameterType="com.dalbit.member.vo.procedure.P_MemberFanboardInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberFanboardOutputVo">
        select @rownum := @rownum + 1 as rowNum, aa.*
         from (SELECT
          a.idx AS board_idx,
          a.board_no AS board_no,
          a.writer_no AS writer_mem_no,
          b.mem_nick AS nickName,
          b.mem_userid as userId,
          b.mem_sex AS memSex,
          ( SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.writer_no ) AS profileImage,
          a.contents AS contents,
          ( SELECT COUNT(*) FROM rd_data.tb_member_fanboard WHERE mem_no =  #{mem_no} and `status` = 1 AND board_no = a.board_no AND depth = 2 ) AS replyCnt,
          a.`STATUS` AS `STATUS`,
          a.last_upd_date AS writeDate
        from
          ( select idx, board_no, contents, writer_no, `STATUS`, last_upd_date from rd_data.tb_member_fanboard where mem_no = #{mem_no} AND depth = 1  and `status` = 1) AS a JOIN rd_data.tb_member_basic AS b
            ON a.writer_no = b.mem_no

        union
        SELECT
          a.idx AS board_idx,
          a.board_no AS board_no,
          a.writer_no AS writer_mem_no,
          b.mem_nick AS nickName,
          b.mem_userid as userId,
          b.mem_sex AS memSex,
          ( SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.writer_no ) AS profileImage,
          a.contents AS contents,
          ( SELECT COUNT(*) FROM rd_data.tb_member_fanboard WHERE mem_no =  #{mem_no} and `status` = 1 AND board_no = a.board_no AND depth = 2 ) AS replyCnt,
          a.`STATUS` AS `STATUS`,
          a.last_upd_date AS writeDate
        from
          ( select idx, board_no, contents, writer_no, `STATUS`, last_upd_date from rd_data.tb_member_fanboard where mem_no = #{mem_no} AND depth = 1  and `status` = 1) AS a JOIN rd_data.tb_member_withdrawal_bak AS b
            ON a.writer_no = b.mem_no
          limit #{pageNo}, #{pageCnt}
        ) aa, (select @rownum := #{pageNo}) b
        order BY writeDate desc
    </select>

    <select id="callFanboardHistory_totalCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberFanboardInputVo" resultType="integer">
        SELECT count(*) totalCnt
        from (select writer_no
              from rd_data.tb_member_fanboard
              where mem_no =  #{mem_no} AND depth = 1 and `status` = 1) AS a LEFT JOIN rd_data.tb_member_basic AS b
            ON a.writer_no = b.mem_no
    </select>


    <select id="callFanboardReplyList" parameterType="com.dalbit.member.vo.procedure.P_MemberFanboardInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberFanboardOutputVo">
        SELECT
            a.idx AS board_idx,
            a.board_no AS board_no,
            a.writer_no AS writer_mem_no,
            b.mem_nick AS nickName,
            b.mem_userid as userId,
            b.mem_sex AS memSex,
            ( SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.writer_no ) AS profileImage,
            a.contents AS contents,
            a.`STATUS` AS `STATUS`,
            a.last_upd_date AS writeDate,
            depth
        from
            ( select idx, board_no, contents, writer_no, `STATUS`, last_upd_date,depth from rd_data.tb_member_fanboard where mem_no = #{mem_no} AND board_no = #{board_no} and `status` = 1) AS a JOIN rd_data.tb_member_basic AS b
        ON a.writer_no = b.mem_no

        union

        SELECT
            a.idx AS board_idx,
            a.board_no AS board_no,
            a.writer_no AS writer_mem_no,
            b.mem_nick AS nickName,
            b.mem_userid as userId,
            b.mem_sex AS memSex,
            ( SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.writer_no ) AS profileImage,
            a.contents AS contents,
            a.`STATUS` AS `STATUS`,
            a.last_upd_date AS writeDate,
            depth
        from
            ( select idx, board_no, contents, writer_no, `STATUS`, last_upd_date,depth from rd_data.tb_member_fanboard where mem_no = #{mem_no} AND board_no = #{board_no} and `status` = 1) AS a JOIN rd_data.tb_member_withdrawal_bak AS b
        ON a.writer_no = b.mem_no

        order BY writeDate DESC
    </select>

    <update id="callFanboardDelete" parameterType="com.dalbit.member.vo.procedure.P_MemberFanboardDeleteVo">
        /* Mem_Fanboard.xml - callFanboardDelete */
        UPDATE rd_data.tb_member_fanboard SET contents = '삭제되었습니다.', `STATUS` = 2 WHERE idx = #{idx}
    </update>
</mapper>