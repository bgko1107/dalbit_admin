<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.sample.dao.SampleDao" >

    <select id="getCount" resultType="int">
    /* Sample.xml - getCount */
        SELECT
            count(*)
        FROM TEST
    </select>

    <select id="getList" resultType="SampleVo">
    /* Sample.xml - getList */
        SELECT
            id
            , name
            , age
        FROM TEST
    </select>
    
    <insert id="insertSample" parameterType="SampleVo">
    /* Sample.xml - insertSample */
        INSERT INTO TEST(
          ID
          , NAME
          , AGE
        ) VALUES (
          #{id}
          , #{name}
          , #{age}
        )
    </insert>

    <sql id="condition">
        <where>
            <if test='txt_startSel != null and txt_startSel != ""'>
                upd_date  <![CDATA[>=]]> #{txt_startSel} and upd_date  <![CDATA[<=]]> concat(#{txt_startSel},' 23:59:59')
            </if>
            <if test="ostype != null and ostype != '' ">
                and ostype = #{ostype}
            </if>
            <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test='searchType == "mem_no"'>
                        and mem_no =  #{searchText}
                    </when>
                    <when test='searchType == "ctype"'>
                        and ctype = #{searchText}
                    </when>
                    <when test='searchType == "description"'>
                        and `desc` like concat ('%', #{searchText}, '%')
                    </when>
                    <otherwise>
                        and (mem_no = #{searchText}
                            or ctype = #{searchText}
                            or `desc` like concat ('%', #{searchText}, '%')
                        )
                    </otherwise>
                </choose>
            </if>
        </where>
    </sql>

    <select id="getLogErrorData" parameterType="com.dalbit.sample.vo.ErrorVo" resultType="com.dalbit.sample.vo.ErrorVo">
        /* Sample.xml - getLogErrorData */
        select @RNUM := @RNUM + 1 as rowNum, a.*
            from (
                select
                    idx,
                    mem_no,
                    ostype,
                    version,
                    build,
                    dtype,
                    ctype,
                    `desc`,
                    upd_date

                from rd_data.tb_log_error_data
                <include refid="condition"/>
                order by idx desc
            )a, (select @RNUM := #{pageStart}) r
        limit #{pageStart}, #{pageCnt}

    </select>

    <select id="getLogErrorDataCnt" parameterType="com.dalbit.sample.vo.ErrorVo" resultType="integer">
        /* Sample.xml - getLogErrorDataCnt*/
        select
          count(*)
        from rd_data.tb_log_error_data
        <include refid="condition"/>
    </select>

</mapper>