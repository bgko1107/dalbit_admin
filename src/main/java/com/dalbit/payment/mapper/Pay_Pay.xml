<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.payment.dao.Pay_PayDao" >

    <sql id="payCondition">
        select
            pay.order_id
            , pay.mem_no
            , pay.pay_way
            , pay.pay_dt_comein
            , pay.pay_yn
            , pay.pay_ok_date
            , pay.pay_ok_time
            , pay.pay_slct
            , floor(pay.pay_amt) as pay_amt
            , pay.pay_code
            , member.inner as chrgr_yn
            , pay.app_ver
            , pay.first_pay_yn
            , pay.card_no
            , pay.card_nm
            , pay.phone_no
            , pay.bank_code
            , pay.account_no
            , pay.rcpt_dt
            , pay.rcpt_nm
            , pay.store_id
            , pay.cancel_dt
            , pay.cancel_state
            , pay.fail_msg
            , pay.op_name
            , pay.bill_id
            , pay.os
            , pay.dal_cnt
            , pay.pay_info
            ,CASE
                WHEN pay.pay_way = 'CN'
                THEN pay.card_no
                WHEN pay.pay_way = 'MC'
                THEN pay.phone_no
                WHEN pay.pay_way = 'VA'
                THEN pay.account_no
                WHEN pay.pay_way = 'InApp'
                THEN pay.bill_id
            END AS pay_info_no
            ,CASE
                WHEN pay.pay_way = 'CN'
                THEN pay.card_nm
                WHEN pay.pay_way = 'VA'
                THEN pay.bank_code
            END AS pay_info_nm
            , summary.memCnt as count
            , summary.paySum as amount
            , @RNUM := @RNUM + 1 as rowNum
            , mem_nick
            , mem_userid
            , mem_id
            , mem_phone
            , birth
            , ruby as tot_dal_cnt
        from rd_data.tb_payment_succ pay
            left join (select mem_no, count(mem_no) memCnt, sum(pay_amt) paySum from rd_data.tb_payment_succ where pay_yn = 'Y' group by mem_no) summary on pay.mem_no = summary.mem_no
            left join (select mem_no, mem_nick, mem_userid, mem_id, mem_phone, `inner`, concat(mem_birth_year,'-',IF(length(mem_birth_month) = 1, concat('0',mem_birth_month), mem_birth_month),'-',IF(length(mem_birth_day) = 1, concat('0',mem_birth_day), mem_birth_day)) as birth from rd_data.tb_member_basic union select mem_no, mem_nick, mem_userid, mem_id, mem_phone, `inner`, concat(mem_birth_year,'-',IF(length(mem_birth_month) = 1, concat('0',mem_birth_month), mem_birth_month),'-',IF(length(mem_birth_day) = 1, concat('0',mem_birth_day), mem_birth_day)) as birth from rd_data.tb_member_withdrawal_bak) member on pay.mem_no = member.mem_no
            left join (select mem_no, ruby from rd_data.tb_member_wallet) wallet on pay.mem_no = wallet.mem_no
            , (select @rownum := #{pageStart}) r
        order by pay_dt_comein desc
    </sql>

    <select id="getPayList" parameterType="com.dalbit.payment.vo.Pay_PayInputVo" resultType="com.dalbit.payment.vo.Pay_PayOutputVo">
        /* Pay_Pay.xml - getPayList */
        select @rownum := @rownum + 1 as rowNum,a.*
        from (
        <include refid="payCondition"/>
        ) a
        where (mem_nick like concat('%', #{searchText}, '%')
        or mem_no like concat('%', #{searchText}, '%')
        or mem_id like concat('%', #{searchText}, '%')
        or mem_phone like concat('%', #{searchText}, '%'))
        <if test="period == 0 or period == 1">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
        </if>
        <if test="period == 2">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) <![CDATA[<]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
        </if>
        <if test="period == 3 or period == 4">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) = STR_TO_DATE(#{sDate}, '%Y%m%d')
        </if>
        <if test="searchPayStatus != -1">    <!-- 전체가 아닐때 -->
            <if test="searchPayStatus == 1">  <!-- 결제 완료 -->
                and pay_yn ='Y'
            </if>
            <if test="searchPayStatus == 2"> <!-- 취소 완료 -->
                and cancel_state = 'Y'
            </if>
            <if test="searchPayStatus == 3"> <!-- 취소 불가 -->
                and cancel_state = 'F'
            </if>
        </if>
        <if test="ostype != -1">
            and os = #{ostype}
        </if>
        <if test="innerType != -1">
            and chrgr_yn = #{innerType}
        </if>
        <if test="payWay != 'all'">
            and pay_way = #{payWay}
        </if>

        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="getPayListCnt" parameterType="com.dalbit.payment.vo.Pay_PayInputVo" resultType="integer">
        /* Pay_Pay.xml - getPayListCnt */
        select
          count(*)
        from (
        <include refid="payCondition"/>
        ) a
        where (mem_nick like concat('%', #{searchText}, '%')
        or mem_no like concat('%', #{searchText}, '%')
        or mem_id like concat('%', #{searchText}, '%')
        or mem_phone like concat('%', #{searchText}, '%'))
        <if test="period == 0 or period == 1">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
        </if>
        <if test="period == 2">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) <![CDATA[<]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
        </if>
        <if test="period == 3 or period == 4">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) = STR_TO_DATE(#{sDate}, '%Y%m%d')
        </if>
        <if test="searchPayStatus != -1">    <!-- 전체가 아닐때 -->
            <if test="searchPayStatus == 1">  <!-- 결제 완료 -->
                and pay_yn ='Y'
            </if>
            <if test="searchPayStatus == 2"> <!-- 취소 완료 -->
                and cancel_state = 'Y'
            </if>
            <if test="searchPayStatus == 3"> <!-- 취소 불가 -->
                and cancel_state = 'F'
            </if>
        </if>
        <if test="ostype != -1">
            and os = #{ostype}
        </if>
        <if test="innerType != -1">
            and chrgr_yn = #{innerType}
        </if>
        <if test="payWay != 'all'">
            and pay_way = #{payWay}
        </if>
    </select>


    <select id="getPaySummary" parameterType="com.dalbit.payment.vo.Pay_PayInputVo" resultType="com.dalbit.payment.vo.Pay_PayOutputVo">
        /* Pay_Pay.xml - getPaySummary */
        select count(case when pay_yn = 'Y' then 1 end) as totalPayCnt
                ,sum(case when pay_yn = 'Y' then pay_amt end) as totalPayAmt
                ,count(case when cancel_state = 'Y' then 1 end) as totalPayCancelCnt
                ,sum(case when cancel_state = 'Y' then pay_amt end) as totalPayCancelAmt
                ,count(case when cancel_state = 'F' then 1 end) as totalPayCancelCannotCnt
                ,sum(case when cancel_state = 'F' then pay_amt end) as totalPayCancelCannotAmt
        from (
        <include refid="payCondition"/>
        ) a
        where (mem_nick like concat('%', #{searchText}, '%')
        or mem_no like concat('%', #{searchText}, '%')
        or mem_id like concat('%', #{searchText}, '%')
        or mem_phone like concat('%', #{searchText}, '%'))
        <if test="period == 0 or period == 1">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) <![CDATA[<=]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
        </if>
        <if test="period == 2">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) >= STR_TO_DATE(#{sDate}, '%Y%m%d')
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) <![CDATA[<]]>  STR_TO_DATE(#{eDate}, '%Y%m%d')
        </if>
        <if test="period == 3 or period == 4">
            and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y%m%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y%m%d') ,DATE_FORMAT(pay_ok_date, '%Y%m%d'))) = STR_TO_DATE(#{sDate}, '%Y%m%d')
        </if>
        <if test="searchPayStatus != -1">    <!-- 전체가 아닐때 -->
            <if test="searchPayStatus == 1">  <!-- 결제 완료 -->
                and pay_yn ='Y'
            </if>
            <if test="searchPayStatus == 2"> <!-- 취소 완료 -->
                and cancel_state = 'Y'
            </if>
            <if test="searchPayStatus == 3"> <!-- 취소 불가 -->
                and cancel_state = 'F'
            </if>
        </if>
        <if test="ostype != -1">
            and os = #{ostype}
        </if>
        <if test="innerType != -1">
            and chrgr_yn = #{innerType}
        </if>
        <if test="payWay != 'all'">
            and pay_way = #{payWay}
        </if>
    </select>

    <select id="getTotalPaySum" parameterType="com.dalbit.enter.vo.procedure.P_StatVo" resultType="com.dalbit.payment.vo.Pay_PaySumOutputVo">
        SELECT SUM(succ_cnt) AS totalSuccCnt,
                SUM(pay_amt) AS totalSuccAmt,
                SUM(try_cnt) AS totalTryCnt,
                if( ifnull(SUM(try_cnt),0) > 0, FLOOR((ifnull(SUM(succ_cnt), 0)/SUM(try_cnt))*100), 0) AS totalSuccRate,
                SUM(first_cnt) AS totalFirstCnt,
                SUM(first_amt) AS totalFirstAmt,
                SUM(re_cnt) AS totalReCnt,
                SUM(re_amt) AS totalReAmt,
                SUM(canc_cnt) AS totalCancCnt,
                SUM(canc_amt) AS totalCancAmt
          FROM rd_data.stat_member_payment_total
          <if test='startDate != "" and startDate != null'>
            WHERE the_date BETWEEN #{startDate} AND #{endDate}
          </if>
    </select>


    <sql id="baseIosAttemp">
        select @RNUM := @RNUM + 1 rowNum
            , log.idx
            , log.mem_no
            , log.product_nm
            , log.product_price
            , DATE_FORMAT(log.attempt_date, '%Y-%m-%d %H:%i:%s') attempt_date
            , ifnull(basic.mem_nick, withdrawal.mem_nick) mem_nick
            , ifnull(basic.mem_name, withdrawal.mem_name) mem_name
            , ifnull(basic.mem_state, withdrawal.mem_state) mem_state
            , profile.image_profile
        from rd_data.tb_ios_attempt_log log
            left join rd_data.tb_member_basic basic on log.mem_no = basic.mem_no
            left join rd_data.tb_member_withdrawal_bak withdrawal on log.mem_no = withdrawal.mem_no
            left join rd_data.tb_member_profile profile on log.mem_no = profile.mem_no
            , (select @RNUM := 0) r
        where 1=1
        <if test='txt_startSel != null and txt_startSel != ""'>
            and DATE_FORMAT(#{txt_startSel},'%Y-%m-%d 00:00:00') <![CDATA[<=]]> log.attempt_date
        </if>
        <if test='txt_endSel != null and txt_endSel != ""'>
            and log.attempt_date <![CDATA[<=]]> DATE_FORMAT(#{txt_endSel},'%Y-%m-%d 23:59:59')
        </if>

        <if test='searchText != null and searchText != ""'>
            <choose>
                <when test='searchType == "mem_no"'>
                    and log.mem_no like  concat ('%', #{searchText}, '%')
                </when>
                <when test='searchType == "product_nm"'>
                    and log.product_nm like concat ('%', upper(#{searchText}), '%')
                </when>
                <when test='searchType == "mem_nick"'>
                    and (
                        basic.mem_nick like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_nick like concat ('%', upper(#{searchText}), '%')
                    )
                </when>
                <when test='searchType == "mem_name"'>
                    and (
                        basic.mem_name like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_name like concat ('%', upper(#{searchText}), '%')
                    )
                </when>
                <otherwise>
                    and (
                        log.mem_no like concat ('%', #{searchText}, '%')
                        or log.product_nm like concat ('%', upper(#{searchText}), '%')
                        or basic.mem_nick like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_nick like concat ('%', upper(#{searchText}), '%')
                        or basic.mem_name like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_name like concat ('%', upper(#{searchText}), '%')
                    )
                </otherwise>
            </choose>
        </if>
        order by idx desc
    </sql>
    <select id="selectIosAttempCnt" parameterType="com.dalbit.payment.vo.Pay_IosAttempInputVo" resultType="int">
        /* Pay_Pay.xml - selectIosAttempCnt */
        select count(*)
        from (
            <include refid="baseIosAttemp" />
        ) a
    </select>

    <select id="selectIosAttempList" parameterType="com.dalbit.payment.vo.Pay_IosAttempInputVo" resultType="com.dalbit.payment.vo.Pay_IosAttempOutputVo">
        /* Pay_Pay.xml - selectIosAttempList */
        select *
        from (
            <include refid="baseIosAttemp" />
        ) a
    </select>

</mapper>