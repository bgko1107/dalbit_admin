<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.clip.dao.Cli_ClipCategoryDao">

    <sql id="blockCondition">
        <where>
            <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test='searchType == "1"'>
                        rep.reported_mem_no like concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "2"'>
                        and bas.mem_id like concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "3"'>
                        and bas.mem_nick like concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "4"'>
                        and bas.mem_phone like concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "5"'>
                        and blo.block_text like concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "6"'>
                        and blo.op_name like concat ('%', #{searchText}, '%')
                    </when>
                    <otherwise>
                        and (
                        rep.reported_mem_no like concat ('%', #{searchText}, '%')
                        or bas.mem_id like concat ('%', #{searchText}, '%')
                        or bas.mem_nick like concat ('%', #{searchText}, '%')
                        or bas.mem_phone like concat ('%', #{searchText}, '%')
                        or blo.block_text like concat ('%', #{searchText}, '%')
                        or blo.op_name like concat ('%', #{searchText}, '%')
                        )
                    </otherwise>
                </choose>
            </if>
            <if test='blockType != -1'>
                and blo.block_type = #{blockType}
            </if>
        </where>
    </sql>

    <select id="selectBlockList" parameterType="com.dalbit.customer.vo.BlockAdmVo" resultType="com.dalbit.customer.vo.BlockAdmVo">
        /* Cus_BlockAdm.xml - selectBlockList*/
        select *
          from (
            select
                blo.idx as idx
                , rep.reported_mem_no as mem_no
                , bas.mem_id as mem_id
                , bas.mem_nick as mem_nick
                , bas.mem_phone as mem_phone
                , blo.block_type as block_type
                , blo.block_text as block_text
                , blo.block_day as block_day
                , blo.block_end_date as block_end_date
                , blo.last_upd_date as last_upd_date
                , blo.op_name as op_name
                , blo.report_idx as report_idx
                , @RNUM := @RNUM + 1 as rowNum
            from rd_admin.tb_login_block blo
                left join rd_data.tb_member_report rep on blo.report_idx = rep.idx
                left join rd_data.tb_member_basic bas on rep.reported_mem_no = bas.mem_no
                , (select @RNUM := 0) r
            <include refid="blockCondition"/>
            order by last_upd_date desc
          ) a
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="selectBlockListCnt" parameterType="com.dalbit.customer.vo.BlockAdmVo" resultType="integer">
        /* Cus_BlockAdm.xml - selectBlockListCnt*/
        select
          count(*)
        from rd_admin.tb_login_block blo
            left join rd_data.tb_member_report rep on blo.report_idx = rep.idx
            left join rd_data.tb_member_basic bas on rep.reported_mem_no = bas.mem_no
            <include refid="blockCondition"/>
    </select>

    <select id="selectBlockDetail" parameterType="com.dalbit.customer.vo.BlockAdmVo" resultType="com.dalbit.customer.vo.BlockAdmVo">
      /* Cus_BlockAdm.xml - selectBlockDetail*/
      <choose>
          <when test='report_idx != null and report_idx != ""'>
              select
                op_msg
                , idx as report_idx
              from rd_data.tb_member_report
              where idx = #{report_idx}
          </when>
          <otherwise>
              select
                memo as adminMemo
              from rd_admin.tb_login_block
              where idx = #{idx}
          </otherwise>
      </choose>
    </select>

    <insert id="insertBlock" parameterType="com.dalbit.customer.vo.BlockAdmVo">
      /* Cus_BlockAdm.xml - insertBlock*/
      insert into rd_admin.tb_login_block (
        block_type
        , block_text
        , block_day
        , block_end_date
        , last_upd_date
        , op_name
        , report_idx
        , memo
      ) values (
        #{radioBlock}
        , #{block_text}
        , #{block_day}
        <choose>
            <when test="block_day == 99">
                , '9999-12-31'
            </when>
            <otherwise>
                , DATE_ADD(now(), interval #{block_day} day)
            </otherwise>
        </choose>
         , now()
         , #{op_name}
         , null
         , #{adminMemo}
      )
    </insert>

    <insert id="insertBlockHistory" parameterType="com.dalbit.customer.vo.BlockAdmVo">
      /* Cus_BlockAdm.xml - insertBlockHistory*/
      insert into rd_admin.tb_login_block_history (
        edit_contents
        , edit_type
        , last_upd_date
        , op_name
        , report_idx
        , memo
        ) values (
          #{edit_contents}
          , #{edit_type}
          , now()
          , #{op_name}
          , null
          , #{adminMemo}
        )
    </insert>

    <delete id="deleteBlock" parameterType="com.dalbit.customer.vo.BlockAdmVo">
        /* Cus_BlockAdm.xml - deleteBlock*/
        delete from rd_admin.tb_login_block
        where idx = #{idx}
    </delete>

    <insert id="insertDelBlockHistory" parameterType="com.dalbit.customer.vo.BlockAdmVo">
        /* Cus_BlockAdm.xml - insertDelBlockHistory*/
        insert into rd_admin.tb_login_block_history (
          edit_contents
          , edit_type
          , last_upd_date
          , op_name
          , report_idx
          , memo
          ) values (
            #{edit_contents}
            , #{edit_type}
            , now()
            , #{op_name}
            , #{report_idx}
            , null
          )
    </insert>

    <select id="selectBlockInfo" parameterType="String" resultType="com.dalbit.customer.vo.BlockAdmVo">
        /* Cus_BlockAdm.xml - selectBlockInfo*/
        select *
            from rd_admin.tb_login_block
            where idx = #{idx}
    </select>

    <sql id="blockHistCondition">
            <where>
                <if test='searchHistText != "" and searchHistText != null'>
                    <choose>
                        <when test='searchType == "1"'>
                            edit_contents like concat ('%', #{searchHistText}, '%')
                        </when>
                        <when test='searchType == "2"'>
                            and op_name like concat ('%', #{searchHistText}, '%')
                        </when>
                        <otherwise>
                            and (
                                edit_contents like concat ('%', #{searchHistText}, '%')
                                or op_name like concat ('%', #{searchHistText}, '%')
                            )
                        </otherwise>
                    </choose>
                </if>
            </where>
    </sql>

    <select id="selectBlockHistList" parameterType="com.dalbit.customer.vo.BlockAdmVo" resultType="com.dalbit.customer.vo.BlockAdmVo">
        /* Cus_BlockAdm.xml - selectBlockHistList*/
        select *
          from (
            select
                edit_contents
                , edit_type
                , last_upd_date
                , op_name
                , report_idx
                , memo
                , @RNUM := @RNUM + 1 as rowNum
            from rd_admin.tb_login_block_history
                , (select @RNUM := 0) r
            <include refid="blockHistCondition"/>
            order by last_upd_date desc
          ) a
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="selectBlockHistListCnt" parameterType="com.dalbit.customer.vo.BlockAdmVo" resultType="integer">
        /* Cus_BlockAdm.xml - selectBlockHistListCnt*/
        select count(*)
            from rd_admin.tb_login_block_history
            <include refid="blockHistCondition"/>
    </select>


    <!-- 클립 랭킹 -->
    <select id="callClipRankList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.procedure.P_ClipRankListOutPut">
        call rd_admin.sp_admin_clip_ranking_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <!-- 달대리 추천 클립 목록-->
    <select id="callClipRecommendList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.procedure.P_ClipRecommendListOutPut">
        call rd_admin.sp_admin_clip_recommend_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <!-- 달대리 추천 클립 등록-->
    <select id="callClipRecommendEdit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_admin.sp_admin_clip_recommend_edit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <!-- 달대리 추천 클립 상세정보-->
    <select id="callClipRecommendDetail" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.procedure.P_ClipRecommendDetailOutPut">
        call rd_admin.sp_admin_clip_recommend_detail(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <!-- 달대리 추천 클립 삭제-->
    <select id="callClipRecommendDelete" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_admin.sp_admin_clip_recommend_delete(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <!-- 달대리 추천 클립 대표 등록여부 체크-->
    <select id="getLeaderCheck" parameterType="com.dalbit.clip.vo.procedure.P_ClipRecommend" resultType="com.dalbit.clip.vo.procedure.P_ClipRecommendDetailOutPut">
        SELECT `year_month` AS yearMonth
              , week_no AS weekNo
              , group_no AS groupNo
              , view_yn AS viewYn
              , reg_date AS regDate
              , op_name AS opName
          FROM rd_admin.tb_admin_clip_recommend WHERE leader_yn = 1 AND cast_no = #{castNo}
         order by regDate desc
          limit 1
    </select>

</mapper>