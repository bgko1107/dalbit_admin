<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.clip.dao.Cli_ClipHistoryDao">

    <!-- 클립 이력 조회 -->
    <select id="callClipHistoryList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryVo">
        call rd_admin.sp_admin_clip_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <!-- 클립 등록자 이력 조회 -->
    <select id="callClipRegHistoryList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryVo">
        call rd_admin.sp_admin_clip_reg_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <!-- 클립 이력(회원) 조회 -->
    <select id="callClipHistoryMemberList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryMemberVo">
        call rd_admin.sp_admin_clip_member_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <!-- 클립 숨김 처리 -->
    <update id="updateHide" parameterType="com.dalbit.clip.vo.ClipHistoryVo">
    /* Cli_ClipHistory.xml - updateHide*/
        UPDATE rd_data.tb_cast_room
        SET
          hide = #{hide}
        WHERE
          cast_no = #{castNo}
    </update>

    <!-- 클립 삭제 처리 -->
    <update id="deleteClip" parameterType="com.dalbit.clip.vo.ClipHistoryVo">
    /* Cli_ClipHistory.xml - clipRemove*/
        UPDATE rd_data.tb_cast_room
        SET
          end_date = NOW()
          ,state = 5
        WHERE
          cast_no = #{castNo}
    </update>

    <!-- 클립 어드미 수정 이력등록 -->
    <insert id="insertClipEditHistory" parameterType="com.dalbit.clip.vo.ClipEditHistoryVo">
        /* Cli_ClipHistory.xml - insertClipEditHistory */
        INSERT INTO rd_admin.tb_clip_edit_history(
            edit_contents
            , edit_type
            , last_upd_date
            , op_name
            , cast_no
        ) values(
            #{edit_contents}
            , #{edit_type}
            , now()
            , #{op_name}
            , #{castNo}
        )
    </insert>







    <!-- 클립 댓글 리스트 조회 -->
    <sql id="clipHistoryReplyCondition">
        <where>
            borad.cast_no = #{targetClipNo}

            <if test="isChoiceDate != null and isChoiceDate != '' and isChoiceDate != '-1' ">
                AND borad.write_date
                BETWEEN
                DATE_FORMAT(#{startDate}, '%Y-%m-%d 00:00:00')
                AND
                DATE_FORMAT(#{endDate}, '%Y-%m-%d 23:59:59')
            </if>

            <if test='search_testId != null and search_testId == "1"'>
                AND
                basic.`inner` = 0
            </if>

            <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test='searchType == "3"'>
                        and clip.mem_no like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "4"'>
                        and clipInfo.mem_userid like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "5"'>
                        and clipInfo.mem_nick like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "6"'>
                        and clipInfo.mem_phone like  concat ('%', #{searchText}, '%')
                    </when>
                    <otherwise>
                        and (
                        IFNULL( basic.mem_no, basicWd.mem_no) like  concat ('%', #{searchText}, '%')
                        or IFNULL( basic.mem_userid, basicWd.mem_userid) like  concat ('%', #{searchText}, '%')
                        or IFNULL( basic.mem_nick, basicWd.mem_nick) like  concat ('%', #{searchText}, '%')
                        or IFNULL( basic.mem_phone, basicWd.mem_phone) like  concat ('%', #{searchText}, '%')
                        )
                    </otherwise>
                </choose>
            </if>

        </where>
    </sql>

    <select id="selectReplyList" parameterType="com.dalbit.clip.vo.ClipHistoryReplyVo" resultType="com.dalbit.clip.vo.ClipHistoryReplyVo">
        select
            @rownum := @rownum + 1 as rowNum,
            a.*
        from (
            SELECT
                a.*
            FROM
            (
                SELECT
                    borad.idx	AS replyIdx
                    , borad.cast_no	AS castNo
                    , borad.cast_mem_no	AS castMemNo
                    , borad.writer_mem_no	AS writerMemNo
                    , borad.contents	AS contents
                    , borad.status	AS status
                    , borad.write_date	AS writeDate
                    , borad.last_upd_date	AS lastUpdDate
                    , IFNULL( basic.mem_nick, basicWd.mem_nick) AS memNick
                    , IFNULL( basic.mem_sex, basicWd.mem_sex) AS memSex
                    , IFNULL( basic.mem_birth_year, basicWd.mem_birth_year) AS memBirthYear
                    , profile.image_profile AS profileImage
                    , (SELECT COUNT(*) FROM rd_data.tb_cast_room_board WHERE cast_no = borad.cast_no AND writer_mem_no = borad.writer_mem_no AND idx <![CDATA[<=]]> borad.idx) AS replyWriteCnt
                    , basic.`inner` AS `inner`
                FROM
                    rd_data.tb_cast_room_board borad
                LEFT JOIN
                    rd_data.tb_member_basic basic
                ON
                    basic.mem_no = borad.writer_mem_no
                LEFT JOIN
                    rd_data.tb_member_withdrawal_bak basicWd
                ON
                    basicWd.mem_no = borad.writer_mem_no
                LEFT JOIN
                    rd_data.tb_member_profile profile
                ON
                    profile.mem_no = borad.writer_mem_no
                <include refid="clipHistoryReplyCondition"></include>
            ) a
            ORDER BY
                a.writeDate DESC, a.replyIdx DESC
            limit #{pageStart}, #{pageCnt}
          ) a
        , (select @rownum := #{pageStart}) r
    </select>

    <select id="selectReplySummary" parameterType="com.dalbit.clip.vo.ClipHistoryReplyVo" resultType="com.dalbit.clip.vo.ClipHistoryTotalVo">
        SELECT
            COUNT(*) AS totalCnt
            , SUM( IF( IFNULL( basic.mem_sex, basicWd.mem_sex ) = 'm' , 1 , 0 ) ) AS manTotalCnt
            , SUM( IF( IFNULL( basic.mem_sex, basicWd.mem_sex ) = 'f' , 1 , 0 ) ) AS femaleTotalCnt
            , SUM( IF( IFNULL( basic.mem_sex, basicWd.mem_sex ) = 'n' , 1 , 0 ) ) AS unknownTotalCnt
        FROM
            rd_data.tb_cast_room_board borad
        LEFT JOIN
            rd_data.tb_member_basic basic
        ON
            basic.mem_no = borad.writer_mem_no
        LEFT JOIN
            rd_data.tb_member_withdrawal_bak basicWd
        ON
            basicWd.mem_no = borad.writer_mem_no
        <include refid="clipHistoryReplyCondition"></include>
        ORDER BY
            write_date DESC
    </select>


    <!-- 클립 청취 이력 조회 -->
    <select id="callClipHistoryListenList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryListenVo">
        call rd_admin.sp_admin_clip_listen_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <!-- 클립 좋아요 이력 조회 -->

    <sql id="clipHistoryGoodCondition">
        <where>
            listen.good != 0

            <if test="targetClipNo != null and targetClipNo != ''">
                AND listen.cast_no = #{targetClipNo}
            </if>

            <if test="isChoiceDate != null and isChoiceDate != '' and isChoiceDate != '-1' ">
                AND listen.good_date
                BETWEEN
                DATE_FORMAT(#{startDate}, '%Y-%m-%d 00:00:00')
                AND
                DATE_FORMAT(#{endDate}, '%Y-%m-%d 23:59:59')
            </if>

            <if test='search_testId != null and search_testId == "1"'>
                AND
                clipInfo.inner = 0
            </if>

            <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test='searchType == "1"'>
                        AND clip.cast_no like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "2"'>
                        AND clip.title like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "3"'>
                        AND listen.mem_no like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "4"'>
                        AND listenInfo.mem_userid like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "5"'>
                        AND listenInfo.mem_nick like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "6"'>
                        AND listenInfo.mem_phone like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "7"'>
                        AND listenInfo.ip like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "8"'>
                        AND clip.mem_no like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "9"'>
                        AND clipInfo.mem_userid like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "10"'>
                        AND clipInfo.mem_nick like  concat ('%', #{searchText}, '%')
                    </when>
                    <when test='searchType == "11"'>
                        AND clipInfo.mem_phone like  concat ('%', #{searchText}, '%')
                    </when>
                    <otherwise>
                        and (
                        clip.cast_no like  concat ('%', #{searchText}, '%')
                        OR clip.title like  concat ('%', #{searchText}, '%')
                        OR listen.mem_no like  concat ('%', #{searchText}, '%')
                        OR listenInfo.mem_userid like  concat ('%', #{searchText}, '%')
                        OR listenInfo.mem_nick like  concat ('%', #{searchText}, '%')
                        OR listenInfo.mem_phone like  concat ('%', #{searchText}, '%')
                        OR listenInfo.ip like  concat ('%', #{searchText}, '%')
                        OR clip.mem_no like  concat ('%', #{searchText}, '%')
                        OR clipInfo.mem_userid like  concat ('%', #{searchText}, '%')
                        OR clipInfo.mem_nick like  concat ('%', #{searchText}, '%')
                        OR clipInfo.mem_phone like  concat ('%', #{searchText}, '%')
                        )
                    </otherwise>
                </choose>
            </if>


        </where>
    </sql>

    <select id="callClipHistoryGoodList" parameterType="com.dalbit.clip.vo.ClipHistoryListenVo" resultType="com.dalbit.clip.vo.ClipHistoryListenVo">
        /* Cli_ClipHistory.xml - callClipHistoryGoodList*/
        select
            @rownum := @rownum + 1 as rowNum,
            a.*
        from (
            SELECT
                a.*
            FROM
            (
                SELECT
                    listen.last_upd_date AS listenDate
                    , listen.good_date AS listenGoodDate
                    , listen.gift_cnt AS listenGiftCnt
                    , listen.gift_dal AS listenGiftDalCnt
                    , listen.good AS listenGoodCnt
                    , listen.play_cnt AS listenPlayCnt
                    , listen.mem_no AS listenMemNo
                    , listenInfo.mem_nick AS listenMemNick
                    , listenInfo.mem_sex AS listenMemSex
                    , listenInfo.mem_birth_year AS listenMemBirthYear
                    , listenInfo.ip AS listenMemIp
                    , clip.idx AS clipIdx
                    , clip.cast_no AS castNo
                    , clip.subject_type AS subjectType
                    , code.code AS subjectName
                    , clip.title AS title
                    , clip.type_entry AS typeEntry
                    , clip.image_background AS imageBackground
                    , clip.file_name AS fileName
                    , clip.file_path AS filePath
                    , clip.file_play AS filePlay
                    , clip.mem_no AS memNo
                    , clipInfo.mem_sex AS memSex
                    , clipInfo.mem_birth_year AS memBirthYear
                    , clipInfo.mem_nick AS memNick
                    , clip.type_open AS typeOpen
                    , clip.state AS state
                    , clip.hide AS hide
                    , clip.code_link AS codeLink
                    , clip.count_play AS countPlay
                    , clip.count_good AS countGood
                    , clip.count_gift AS countGift
                    , clip.count_byeol AS countByeol
                    , clip.start_date AS startDate
                    , clip.end_date AS endDate
                    , clip.badge_newdj AS badgeNewdj
                    , clip.os_type AS osType
                    , clip.last_upd_date AS lastUpdDate
                    , clipInfo.`inner` AS 'inner'
                    , wallet.ruby AS dal
                FROM
                    rd_data.tb_cast_room_member listen
                LEFT JOIN
                    rd_data.tb_cast_room clip
                ON
                    listen.cast_no = clip.cast_no
                LEFT JOIN
                    rd_data.tb_member_basic listenInfo
                ON
                    listen.mem_no = listenInfo.mem_no
                LEFT JOIN
                    rd_data.tb_member_basic clipInfo
                ON
                    listen.cast_mem_no = clipInfo.mem_no
                LEFT JOIN
                    rd_data.tbl_code_define code
                ON
                    code.type = 'clip_type' AND clip.subject_type = code.value
                LEFT JOIN
                    rd_data.tb_member_wallet wallet
                ON
                    listen.cast_mem_no = wallet.mem_no
                <include refid="clipHistoryGoodCondition"/>
            ) a
            order by a.listenDate desc
            limit #{pageStart}, #{pageCnt}
        ) a
        , (select @rownum := #{pageStart}) r
    </select>

    <select id="callClipHistoryGoodListCnt" parameterType="com.dalbit.clip.vo.ClipHistoryListenVo" resultType="integer">
        /* Cli_ClipHistory.xml - callClipHistoryGoodListCnt*/
        select
        COUNT(*)
        from (
        SELECT
        listen.last_upd_date AS listenDate
        , listen.good_date AS listenGoodDate
        , listen.mem_no AS listenMemNo
        , listenInfo.mem_nick AS listenMemNick
        , listenInfo.mem_sex AS listenMemSex
        , listenInfo.mem_birth_year AS listenMemBirthYear
        , listenInfo.ip AS listenMemIp
        , clip.idx AS clipIdx
        , clip.cast_no AS castNo
        , clip.subject_type AS subjectType
        , code.code AS subjectName
        , clip.title AS title
        , clip.type_entry AS typeEntry
        , clip.image_background AS imageBackground
        , clip.file_name AS fileName
        , clip.file_path AS filePath
        , clip.file_play AS filePlay
        , clip.mem_no AS memNo
        , clipInfo.mem_sex AS memSex
        , clipInfo.mem_birth_year AS memBirthYear
        , clipInfo.mem_nick AS memNick
        , clip.type_open AS typeOpen
        , clip.state AS state
        , clip.hide AS hide
        , clip.code_link AS codeLink
        , clip.count_play AS countPlay
        , clip.count_good AS countGood
        , clip.count_gift AS countGift
        , clip.count_byeol AS countByeol
        , clip.start_date AS startDate
        , clip.end_date AS endDate
        , clip.badge_newdj AS badgeNewdj
        , clip.os_type AS osType
        , clip.last_upd_date AS lastUpdDate
        , clipInfo.`inner` AS 'inner'
        FROM
        rd_data.tb_cast_room_member listen
        LEFT JOIN
        rd_data.tb_cast_room clip
        ON
        listen.cast_no = clip.cast_no
        LEFT JOIN
        rd_data.tb_member_basic listenInfo
        ON
        listen.mem_no = listenInfo.mem_no
        LEFT JOIN
        rd_data.tb_member_basic clipInfo
        ON
        listen.cast_mem_no = clipInfo.mem_no
        LEFT JOIN
        rd_data.tbl_code_define code
        ON
        code.type = 'clip_type' AND clip.subject_type = code.value
        <include refid="clipHistoryGoodCondition"/>
        ) a
    </select>


    <select id="callClipHistoryGoodTotal" parameterType="com.dalbit.clip.vo.ClipHistoryListenVo" resultType="com.dalbit.clip.vo.ClipHistoryTotalVo">
        /* Cli_ClipHistory.xml - callClipHistoryGoodTotal*/
        SELECT
        SUM(IF(listenInfo.mem_sex = 'm', 1, 0)) AS manTotalCnt
        , SUM(IF(listenInfo.mem_sex = 'f', 1, 0)) AS femaleTotalCnt
        , SUM(IF(listenInfo.mem_sex = 'n', 1, 0)) AS unknownTotalCnt
        FROM
        rd_data.tb_cast_room_member listen
        LEFT JOIN
        rd_data.tb_cast_room clip
        ON
        listen.cast_no = clip.cast_no
        LEFT JOIN
        rd_data.tb_member_basic listenInfo
        ON
        listen.mem_no = listenInfo.mem_no
        <include refid="clipHistoryGoodCondition"/>
    </select>






    <!-- 클립 선물 이력 조회 -->
    <select id="callClipHistoryGiftList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryGiftVo">
        call rd_admin.sp_admin_clip_gift_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <!-- 클립 삭제 이력 조회 -->
    <select id="callClipHistoryRemoveList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryRemoveVo">
        call rd_admin.sp_admin_clip_remove_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <!-- 클립 상세정보 조회 -->
    <select id="callAdminClipInfoDetail" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_admin.sp_admin_clip_info_detail	(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <!-- 클립 상세정보 수정 -->
    <update id="callAdminClipInfoDetailEdit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo">
        call rd_admin.sp_admin_clip_edit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </update>

    <!-- 클립 상세정보 수정 이력 -->
    <select id="callAdminClipEditHistory" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.procedure.P_ClipHistoryDetailInfoEditHistoryVo">
        call rd_admin.sp_admin_clip_edit_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <!-- 클립 댓글 삭제 처리 -->
    <update id="deleteClipReply" parameterType="com.dalbit.clip.vo.ClipHistoryReplyVo">
    /* Cli_ClipHistory.xml - clipRemove*/
        UPDATE rd_data.tb_cast_room_board
        SET
          status = 2
        WHERE
          cast_no = #{castNo}
          AND idx = #{replyIdx}
    </update>

    <!-- 클립 플레이 이력 조회 -->
    <select id="callClipHistoryPlayList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.ClipHistoryListenVo">
        call rd_admin.sp_admin_clip_play_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="getClipMemberSummary" parameterType="com.dalbit.clip.vo.ClipMemberSummaryVo" resultType="com.dalbit.clip.vo.ClipMemberSummaryVo">
        select sum(listenerCnt) as listenerCnt
        , sum(countPlay) as countPlay
        , sum(countGood) as countGood
        , sum(countGift) as countGift
        , sum(countByeol) as countByeol
          From ( SELECT (select count(*) From rd_data.tb_cast_room_member where cast_no = clip.cast_no and mem_no != clip.mem_no) as listenerCnt
                      , clip.subject_type AS subjectType
                      , clip.count_play AS countPlay
                      , clip.count_good AS countGood
                      , clip.count_gift AS countGift
                      , clip.count_byeol AS countByeol
                   FROM rd_data.tb_cast_room clip
                   LEFT JOIN rd_data.tb_member_basic clipInfo ON clipInfo.mem_no = clip.mem_no
                   LEFT JOIN rd_data.tb_member_withdrawal_bak clipWdInfo ON clipWdInfo.mem_no = clip.mem_no
                   LEFT JOIN rd_data.tbl_code_define code ON code.type = 'clip_type' AND clip.subject_type = code.value
                  WHERE  clip.mem_no = #{memNo}
                  <if test="subjectType != -1">
                      and clip.subject_type = lpad(#{subjectType},2,'0')
                  </if>
          ) a
    </select>

    <select id="getClipListenMemberSummary" parameterType="com.dalbit.clip.vo.ClipMemberSummaryVo" resultType="com.dalbit.clip.vo.ClipMemberSummaryVo">
       select sum(listenerCnt) AS listenerCnt
            , sum(listenPlayCnt) AS countPlay
            , sum(listenGoodCnt) AS countGood
            , sum(listenGiftCnt) AS countGift
            , sum(listenGiftDalCnt) AS countDal
          from (
                SELECT listen.play_cnt AS listenPlayCnt
                      , listen.gift_cnt AS listenGiftCnt
                      , listen.gift_dal AS listenGiftDalCnt
                      , listen.good AS listenGoodCnt
                      , clip.subject_type AS subjectType
                      , (select count(*) from rd_data.tb_cast_room_member a where cast_no=clip.cast_no and cast_mem_no != mem_no) as listenerCnt
                 FROM rd_data.tb_cast_room_member listen
                 LEFT JOIN rd_data.tb_cast_room clip ON clip.cast_no = listen.cast_no
                 LEFT JOIN rd_data.tb_member_basic listenInfo ON listenInfo.mem_no = listen.mem_no
                 LEFT JOIN rd_data.tb_member_withdrawal_bak listenWdInfo ON listenWdInfo.mem_no = listen.mem_no
                 LEFT JOIN rd_data.tb_member_basic clipInfo ON clipInfo.mem_no = clip.mem_no
                 LEFT JOIN rd_data.tb_member_withdrawal_bak clipWdInfo ON clipWdInfo.mem_no = clip.mem_no
                 LEFT JOIN rd_data.tbl_code_define code ON code.type = 'clip_type' AND clip.subject_type = code.value
                 LEFT JOIN rd_data.tb_member_wallet wallet ON listen.cast_mem_no = wallet.mem_no
                WHERE listen.mem_no != clip.mem_no
                  AND listen.mem_no = #{memNo}
          ) a
    </select>

    <!-- 클립 저작권 청취 내역 -->
    <select id="callClipCopyright" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.procedure.P_ClipCopyrightOutputVo">
        call rd_admin.sp_admin_clip_copyright(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <!-- 클립 저작권 청취내역 커버 곡명(관리자), 커버 가수(관리자) 편집 -->
    <update id="updateClipCopyrightCover" parameterType="com.dalbit.clip.vo.ClipCopyrightUpdateVo">
        update rd_data.tb_cast_room
            set admin_cover_title = #{admin_cover_title}
            , admin_cover_singer = #{admin_cover_singer}
        where idx = #{idx}
    </update>

    <!-- 클립 저작권 청취 내역 상세보기 -->
    <select id="callClipCopyrightDetail" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.clip.vo.procedure.P_ClipCopyrightDetailOutputVo">
        call rd_admin.sp_admin_clip_copyright_detail(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
</mapper>