<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.main.dao.Mai_MainStatusDao" >

    <select id="callTotalStatusList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.main.vo.procedure.P_TotalStatusOutVo">
        call rd_admin.sp_admin_main_total_stat_live(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <select id="callJoinStatusList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.main.vo.procedure.P_JoinStatusOutVo">
        call rd_admin.sp_admin_main_total_stat_join(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <select id="callWithdrawStatusList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.main.vo.procedure.P_JoinStatusOutVo">
        call rd_admin.sp_admin_main_total_stat_withdrawal(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <select id="callBroadStatusInfoList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.main.vo.procedure.P_BroadStatusOutVo">
        call rd_admin.sp_admin_main_total_stat_broadcast(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <select id="callChartStatusInfoList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.main.vo.procedure.P_ChartStatusOutVo">
        call rd_admin.sp_admin_main_total_stat_live_graph(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <select id="callItemStatusInfoList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.main.vo.procedure.P_ItemTopFiveOutputVo">
        call rd_admin.sp_admin_main_total_stat_item5(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="getPayDayStatusInfoList" parameterType="com.dalbit.main.vo.PayStatusInputVo" resultType="com.dalbit.main.vo.PayStatusOutputVo">
        select pay_code.pay_way
             , ifnull(succ.pay_cnt, 0) pay_cnt
             , ifnull(succ.pay_amt, 0) pay_amt
        from (
                 select 'CN' as pay_way
                 union all
                 select 'InApp'
                 union all
                 select 'MC'
                 union all
                 select 'RA'
                 union all
                 select 'VA'
             )pay_code
                 left join(
            select pay_way
                 , count(pay_way) pay_cnt
                 , sum(pay_amt) pay_amt
            from rd_data.tb_payment_succ
            where pay_yn = 'y'
              and pay_ok_date = #{searchDate}
            group by pay_way
        )succ on pay_code.pay_way = succ.pay_way
    </select>

    <select id="getPayDayStatusWeekInfoList" parameterType="com.dalbit.main.vo.PayStatusInputVo" resultType="com.dalbit.main.vo.PayStatusOutputVo">
        select pay_code.pay_way
             , ifnull(succ.pay_cnt, 0) pay_cnt
             , ifnull(succ.pay_amt, 0) pay_amt
        from (
                 select 'CN' as pay_way
                 union all
                 select 'InApp'
                 union all
                 select 'MC'
                 union all
                 select 'RA'
                 union all
                 select 'VA'
             )pay_code
                 left join(
            select pay_way
                 , count(pay_way) pay_cnt
                 , sum(pay_amt) pay_amt
            from rd_data.tb_payment_succ
            where pay_yn = 'y'
              and #{searchStartDate} <![CDATA[<=]]> pay_ok_date
              and pay_ok_date <![CDATA[<=]]> #{searchEndDate}
            group by pay_way
        )succ on pay_code.pay_way = succ.pay_way
    </select>

    <select id="getPayCalcelDayStatusInfoList" parameterType="com.dalbit.main.vo.PayStatusInputVo" resultType="com.dalbit.main.vo.PayStatusOutputVo">
        select pay_code.pay_way
             , ifnull(succ.pay_cnt, 0) pay_cnt
             , ifnull(succ.pay_amt, 0) pay_amt
        from (
                 select 'CN' as pay_way
                 union all
                 select 'InApp'
                 union all
                 select 'MC'
                 union all
                 select 'RA'
                 union all
                 select 'VA'
             )pay_code
                 left join(
            select pay_way
                 , count(pay_way) pay_cnt
                 , sum(pay_amt) pay_amt
            from rd_data.tb_payment_succ
            where DATE_FORMAT(cancel_dt, '%Y-%m-%d') = #{searchDate}
              and pay_yn = 'y'
              and cancel_state = 'y'
            group by pay_way
        )succ on pay_code.pay_way = succ.pay_way
    </select>

    <select id="getPayCalcelWeekStatusInfoList" parameterType="com.dalbit.main.vo.PayStatusInputVo" resultType="com.dalbit.main.vo.PayStatusOutputVo">
        select pay_code.pay_way
             , ifnull(succ.pay_cnt, 0) pay_cnt
             , ifnull(succ.pay_amt, 0) pay_amt
        from (
                 select 'CN' as pay_way
                 union all
                 select 'InApp'
                 union all
                 select 'MC'
                 union all
                 select 'RA'
                 union all
                 select 'VA'
             )pay_code
                 left join(
            select pay_way
                 , count(pay_way) pay_cnt
                 , sum(pay_amt) pay_amt
            from rd_data.tb_payment_succ
            where #{searchStartDate} <![CDATA[<=]]> DATE_FORMAT(cancel_dt, '%Y-%m-%d')
              and DATE_FORMAT(cancel_dt, '%Y-%m-%d') <![CDATA[<=]]> #{searchEndDate}
              and pay_yn = 'y'
              and cancel_state = 'y'
            group by pay_way
        )succ on pay_code.pay_way = succ.pay_way
    </select>


    <select id="callPayCancelInfo" parameterType="com.dalbit.main.vo.procedure.P_StatVo" resultType="com.dalbit.enter.vo.procedure.P_PayInfoOutVo">
        SELECT count(case when pay_yn = 'Y' then 1 end) as totalPayCnt
              ,sum(case when pay_yn = 'Y' then pay_amt end) as totalPayAmt
              ,count(case when cancel_state = 'Y' then 1 end) as cancelCnt
              ,sum(case when cancel_state = 'Y' then pay_amt end) as cancelAmt
          FROM ( SELECT pay.pay_yn, floor(pay.pay_amt) as pay_amt
                       , ifnull(basic.inner,member.inner) as chrgr_yn
                       , pay.cancel_dt , pay.cancel_state
                   FROM rd_data.tb_payment_succ pay
                   LEFT JOIN (select mem_no, count(mem_no) memCnt, sum(pay_amt) paySum
                   FROM rd_data.tb_payment_succ
                  WHERE pay_yn = 'Y' group by mem_no) summary
                     ON pay.mem_no = summary.mem_no
                   LEFT JOIN rd_data.tb_member_basic basic
                     on pay.mem_no = basic.mem_no
                   LEFT JOIN rd_data.tb_member_withdrawal_bak member
                     ON pay.mem_no = member.mem_no
                    LEFT JOIN (select mem_no, ruby
                                 FROM rd_data.tb_member_wallet) wallet
                                   ON pay.mem_no = wallet.mem_no , (select @rownum := 0) r
                                order by pay_dt_comein desc ) a
           WHERE DATE_FORMAT(cancel_dt, '%Y%m%d') >= STR_TO_DATE(#{startDate}, '%Y%m%d')
             and DATE_FORMAT(cancel_dt, '%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(#{endDate}, '%Y%m%d')
             and cancel_state = 'Y'
             and chrgr_yn = '0'
    </select>
</mapper>