<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.broadcast.dao.Bro_BroadcastDao" >

    <select id="callBroadcastList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        /* B_Broadcast.xml - callBroadcastList */
        call rd_admin.sp_admin_broadcast_room_search(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastList_all" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastListInputVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        SELECT count(*) as totalBroadCastCnt
               ,SUM(case when os_type = 1 then 1 else 0 end) as totalAosCnt
               ,SUM(case when os_type = 2 then 1 else 0 end) as totalIosCnt
               ,SUM(case when os_type = 3 then 1 else 0 end) as totalPcCnt
          from rd_data.tb_broadcast_room
          <if test="room_liveType == 1">
            where state != 4
          </if>
          <if test="room_liveType == 2">
            where state=4
          </if>
          <if test="endDate != null">
              and DATE_FORMAT(start_date, '%Y-%m-%d') >= #{startDate} and DATE_FORMAT(start_date, '%Y-%m-%d')  <![CDATA[<=]]>  #{endDate}
          </if>
          <if test="endDate == null">
              and DATE_FORMAT(start_date, '%Y-%m-%d') >= #{startDate}
          </if>
    </select>

    <select id="callBroadcastInfo" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastDetailOutputVo">
        call rd_admin.sp_admin_broadcast_info_detail(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastEditHistory" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditHistOutputVo">
        call rd_admin.sp_admin_broadcast_room_edit_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastEdit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_admin.sp_admin_broadcast_room_edit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastInfo_withdrawal" parameterType="String" resultType="java.util.HashMap">
        select mem_userid as dj_userId,
                mem_nick as dj_nickName,
                mem_sex as dj_memSex
          from rd_data.tb_member_withdrawal_bak
         where mem_no = #{mem_no}
    </select>

    <update id="callBroadcastMemberExit" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditInputVo">
        update rd_data.tb_broadcast_room_member
		   set state = 1,
			   last_upd_date = now()
         where  room_no = #{room_no} and state = 0
    </update>

    <update id="callBroadcastExit" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditInputVo">
        update rd_data.tb_broadcast_room
           set state= 4,
               end_date = now(),
               airtime = TIMESTAMPDIFF( second, #{start_date}, NOW()),
               last_upd_date = now()
         where room_no = #{room_no}
    </update>

    <select id="callBroadcastRoomExit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_data.sp_broadcast_room_exit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastSimpleInfo" parameterType="String" resultType="java.util.HashMap">
        SELECT
            a.title
            , a.start_date AS srtDt
            , a.expected_end_date AS expectedEndDt
            , a.os_type AS osType
            , a.image_background AS roomBgImg
            , b.bj_streamid AS bjStreamId
            , c.mem_nick AS nickNm
            , c.mem_sex AS gender
            , d.image_profile AS profImg
            , (select count(*) from rd_data.tb_broadcast_room_member where room_no = a.room_no and state = 0 and auth != 3) AS entryCnt
            , (a.count_good + rd_data.fn_get_point_used_item(a.room_no, 'U1447')) AS linkCnt
            , (select ifnull(sum(ifnull(gold, 0)), 0) from rd_data.tb_member_broadcast_item where room_no = a.room_no and item_type = 1) AS goldCnt
        FROM rd_data.tb_broadcast_room a INNER JOIN rd_data.tb_broadcast_room_member b ON a.room_no = b.room_no AND a.mem_no = b.mem_no AND b.auth = 3
            INNER JOIN rd_data.tb_member_basic c ON a.mem_no = c.mem_no
            INNER JOIN rd_data.tb_member_profile d ON c.mem_no = d.mem_no
        WHERE a.room_no = #{value}
    </select>

    <select id="callBroadcastLiveChatInfo" parameterType="com.dalbit.broadcast.vo.procedure.P_ChatListInputVo" resultType="com.dalbit.broadcast.vo.procedure.P_ChatListOutputVo">
        SELECT a.*
        FROM
        (
            SELECT
                idx AS chatIdx
                ,mem_no AS mem_no
                ,nickname AS nickname
                ,auth AS auth
                ,last_upd_date AS writeDate
                ,room_no AS room_no
                ,msg AS msg
            FROM
                rd_data.tb_broadcast_room_msg
            WHERE
                room_no = #{room_no}
                AND `type`='chat'
                AND idx > #{chatIdx}
            ORDER BY idx
            DESC limit 500
        ) AS a
        ORDER BY chatIdx ASC;
    </select>
</mapper>