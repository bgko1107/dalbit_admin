<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.money.dao.Mon_ItemDao" >

    <sql id="baseChangeItemList">
        select  DATE_FORMAT(a.last_upd_date, '%Y-%m-%d %h:%i:%s') as last_upd_date
                ,c.mem_no
                ,c.mem_userid
                ,c.mem_nick
                ,c.mem_sex
                ,c.inner
                ,(select grade From rd_data.tb_member_level where mem_no = a.mem_no) as mem_grade
                ,(select `level` From rd_data.tb_member_level where mem_no = a.mem_no) as mem_level
                ,(select count(*) from rd_data.tb_member_wallet_ruby where mem_no=a.mem_no and type=6) as changeCnt
                ,b.gold as gold
                ,a.ruby as ruby
                ,a.ruby_old as ruby_old
                ,b.gold_old as gold_old
                ,a.ruby_new as ruby_new
                ,b.gold_new as gold_new
           from rd_data.tb_member_wallet_ruby a join rd_data.tb_member_wallet_gold b on a.mem_no = b.mem_no
          inner join rd_data.tb_member_basic c on a.mem_no = c.mem_no
                ,(select @rownum := #{pageStart}) r
          where a.type=6 and b.type=1
            and a.last_upd_date = b.last_upd_date
            <if test='sDate != null and eDate != ""'>
                and DATE_FORMAT(a.last_upd_date, '%Y.%m.%d') >= #{sDate}
                and DATE_FORMAT(a.last_upd_date, '%Y.%m.%d') <![CDATA[<=]]> #{eDate}
            </if>

            <if test='search_value != null and search_value != ""'>
                <choose>
                    <when test="search_type == 'mem_no'">
                        and c.mem_no like CONCAT('%',#{search_value},'%')
                    </when>
                    <when test="search_type == 'user_id'">
                        and c.mem_userid like CONCAT('%',#{search_value},'%')
                    </when>
                    <when test="search_type == 'mem_nick'">
                        and c.mem_nick like CONCAT('%',#{search_value},'%')
                    </when>
                    <when test="search_type == 'mem_phone'">
                        and c.mem_phone like CONCAT('%',#{search_value},'%')
                    </when>
                    <otherwise>
                        and (
                        c.mem_no like CONCAT('%',#{search_value},'%')
                        or c.mem_userid like CONCAT('%',#{search_value},'%')
                        or c.mem_nick like CONCAT('%',#{search_value},'%')
                        or c.mem_phone like CONCAT('%',#{search_value},'%')
                        )
                    </otherwise>
                </choose>
            </if>

            <if test='search_testId == 1'>
                and c.inner = 0
            </if>
    </sql>


    <select id="selectChangeItemCnt" parameterType="com.dalbit.money.vo.Mon_ItemInputVo" resultType="int">
        /* Mon_Item.xml - selectChangeItemCnt */
        select count(*)
        from(
            <include refid="baseChangeItemList"/>
        )a
    </select>

    <select id="selectChangeItemList" parameterType="com.dalbit.money.vo.Mon_ItemInputVo" resultType="com.dalbit.money.vo.Mon_ItemOutputVo">
        /* Mon_Item.xml - selectChangeItemList */
        select @rownum := @rownum + 1 as rowNum,a.*
        from (
            <include refid="baseChangeItemList"/>
        ) a
        order by last_upd_date desc
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="selectChangeItemSummary" parameterType="com.dalbit.money.vo.Mon_ItemInputVo" resultType="com.dalbit.money.vo.Mon_ItemOutputVo">
        /* Mon_Item.xml - selectChangeItemSummary */
        SELECT sum(gold) as sumTotalByeol
                ,sum(ruby) as sumTotalDal
                ,count(case when mem_sex = 'm' then 1 end) as changeMale
                ,count(case when mem_sex = 'f' then 1 end) as changeFemale
        from(
        <include refid="baseChangeItemList"/>
        )a
    </select>

    <select id="selectChangeItemMemCnt" parameterType="com.dalbit.money.vo.Mon_ItemInputVo" resultType="int">
        /* Mon_Item.xml - selectChangeItemMemCnt */
        SELECT count(distinct mem_no) as cnt
        from(
        <include refid="baseChangeItemList"/>
        )a
    </select>

    <select id="selectChangeItemModCnt" parameterType="com.dalbit.money.vo.Mon_ItemInputVo" resultType="com.dalbit.money.vo.Mon_ItemOutputVo">
        /* Mon_Item.xml - selectChangeItemMemCnt */
        select sum(gold) as modByeol, sum(ruby) as modDal
          from rd_data.tb_member_wallet a join rd_data.tb_member_basic b on a.mem_no = b.mem_no
        <if test='search_value != null and search_value != ""'>
            <choose>
                <when test="search_type == 'mem_no'">
                    and b.mem_no like CONCAT('%',#{search_value},'%')
                </when>
                <when test="search_type == 'user_id'">
                    and b.mem_userid like CONCAT('%',#{search_value},'%')
                </when>
                <when test="search_type == 'mem_nick'">
                    and b.mem_nick like CONCAT('%',#{search_value},'%')
                </when>
                <when test="search_type == 'mem_phone'">
                    and b.mem_phone like CONCAT('%',#{search_value},'%')
                </when>
                <otherwise>
                    and ( b.mem_no like CONCAT('%',#{search_value},'%')
                        or b.mem_userid like CONCAT('%',#{search_value},'%')
                        or b.mem_nick like CONCAT('%',#{search_value},'%')
                        or b.mem_phone like CONCAT('%',#{search_value},'%')
                        )
                </otherwise>
            </choose>
        </if>
        <if test='search_testId == 1'>
            and b.inner = 0
        </if>
            and a.mem_no in (select distinct mem_no
                              from rd_data.tb_member_wallet_ruby where type = 6
                               and DATE_FORMAT(last_upd_date, '%Y.%m.%d') >= #{sDate}
                               and DATE_FORMAT(last_upd_date, '%Y.%m.%d') <![CDATA[<=]]> #{eDate}
                            )
    </select>


</mapper>