<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.money.dao.Mon_ExchangeDao" >

    <sql id="baseExchange">
        select
            @RNUM := @RNUM + 1 as rowNum,
            a.*
            , ifnull(exchangeCnt, 0) exchangeCnt
            , ifnull(totalCashBasic, 0) totalCashBasic
            , ifnull(totalCashReal, 0) totalCashReal
        from (
            select basic.mem_no,
                   basic.mem_id,
                   basic.mem_name,
                   basic.mem_nick,
                   basic.mem_state,
                   basic.mem_phone,
                   basic.mem_userid,
                   profile.image_profile,
                   exchange.idx,
                   exchange.byeol,
                   exchange.cash_basic,
                   exchange.income_tax,
                   exchange.resident_tax,
                   exchange.transfer_fee,
                   exchange.benefit,
                   exchange.cash_real,
                   exchange.account_name,
                   exchange.bank_code,
                   exchange.account_no,
                   exchange.social_no,
                   exchange.phone_no,
                   exchange.address_1,
                   exchange.address_2,
                   exchange.add_file1,
                   exchange.add_file2,
                   exchange.terms_agree,
                   exchange.os_type,
                   exchange.ip,
                   exchange.confirm,
                   exchange.state,
                   exchange.op_msg,
                   exchange.op_name,
                   exchange.op_date,
                   exchange.reg_date,
                   exchange.send_title,
                   exchange.send_cont,
                   exchange.send_type,
                   exchange.last_upd_date,
                   wallet.gold
            from rd_data.tb_member_exchange exchange
                inner join rd_data.tb_member_profile profile on exchange.mem_no = profile.mem_no
                inner join rd_data.tb_member_wallet wallet on exchange.mem_no = wallet.mem_no
                left join rd_admin.tb_special_dj special on exchange.mem_no = special.mem_no and special.select_year = #{search_year} and special.select_month = #{search_month}
                left join rd_data.tb_member_basic basic on exchange.mem_no = basic.mem_no
                inner join (select @RNUM := 0) r
            where
                concat(#{search_year}, #{search_month}) = DATE_FORMAT(exchange.reg_date, '%Y%m')
                <choose>
                    <when test="isSpecial == 0">
                        and special.mem_no is null
                    </when>
                    <when test="isSpecial == 1">
                        and special.mem_no is not null
                    </when>
                </choose>

                <if test='search_value != null and search_value != ""'>
                    <choose>
                        <when test="search_type == 'mem_no'">
                            and exchange.mem_no like CONCAT('%',#{search_value},'%')
                        </when>
                        <when test="search_type == 'user_id'">
                            and basic.mem_userid like CONCAT('%',#{search_value},'%')
                        </when>
                        <when test="search_type == 'mem_nick'">
                            and basic.mem_nick like CONCAT('%',#{search_value},'%')
                        </when>
                        <when test="search_type == 'mem_phone'">
                            and exchange.phone_no like CONCAT('%',#{search_value},'%')
                        </when>
                        <otherwise>
                            and (
                                exchange.mem_no like CONCAT('%',#{search_value},'%')
                                or basic.mem_userid like CONCAT('%',#{search_value},'%')
                                or basic.mem_nick like CONCAT('%',#{search_value},'%')
                                or exchange.phone_no like CONCAT('%',#{search_value},'%')
                            )
                        </otherwise>
                    </choose>
                </if>


                <if test='search_state != null and search_state != ""'>
                    and exchange.state = #{search_state}
                </if>

                <if test='excelYn == "Y" and limitDay != ""'>
                    and DATE_FORMAT(exchange.reg_date, '%Y%m%d') <![CDATA[<]]> #{limitDay}
                </if>

                <if test='search_testId == 1'>
                    and basic.inner = 0
                </if>

                <if test='idx != null and idx != 0'>
                    <if test='search_year == null'>
                        or exchange.idx = #{idx}
                    </if>
                    <if test='search_year != null'>
                        and exchange.idx = #{idx}
                    </if>
                </if>

            order by exchange.idx desc
        ) a
        left join
        (
            select
                mem_no memNo
                , count(mem_no) exchangeCnt
                , sum(cash_basic) totalCashBasic
                , sum(cash_real) totalCashReal
            from rd_data.tb_member_exchange
            where state = 1
            group by mem_no
        ) summary on a.mem_no = summary.memNo
    </sql>

    <select id="selectExchangeList" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="com.dalbit.money.vo.Mon_ExchangeOutputVo">
        /* Mon_Exchange.xml - selectExchangeList */
        select
            *
        from (
            <include refid="baseExchange" />
        ) a
        <if test='excelYn != "Y"'>
            where a.rowNum between #{searchStartNo, jdbcType=INTEGER} and #{searchEndNo, jdbcType=INTEGER}
        </if>

    </select>

    <select id="selectExchangeCnt" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="integer">
        /* Mon_Exchange.xml - selectExchangeCnt */
        select count(*)
        from (
            <include refid="baseExchange" />
        ) a
    </select>

    <select id="selectExchangeDetail" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="com.dalbit.money.vo.Mon_ExchangeOutputVo">
        /* Mon_Exchange.xml - selectExchangeDetail */
        select *
        from (
            <include refid="baseExchange" />
        ) a
    </select>

    <select id="selectSummaryInfo" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="int">
        /* Mon_Exchange.xml - selectSummaryInfo */
        -- 미처리 건 수
        select ifnull(sum(cnt), 0) cnt
        from (
            select 1 cnt
            from rd_data.tb_member_exchange exchange
                left join rd_admin.tb_special_dj special
                on exchange.mem_no = special.mem_no
                    and special.select_year = #{search_year}
                    and special.select_month = #{search_month}
                left join rd_data.tb_member_basic basic
                on exchange.mem_no = basic.mem_no
            <if test="slctType == 2">
                where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
            </if>
            <if test="slctType == 1">
                where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
            </if>
            <if test="slctType == 0">
                where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
            </if>

            and exchange.state = 0
            <choose>
                <when test="isSpecial == 0">
                    and special.mem_no is null
                </when>
                <when test="isSpecial == 1">
                    and special.mem_no is not null
                </when>
            </choose>
            <if test='search_testId == 1'>
                and basic.inner = 0
            </if>
         )a

        union all
        -- 미처리 신청금액
        select ifnull(sum(cash_real), 0) cash_basic
        from rd_data.tb_member_exchange exchange
        left join rd_admin.tb_special_dj special
        on exchange.mem_no = special.mem_no
        and special.select_year = #{search_year}
        and special.select_month = #{search_month}
        left join rd_data.tb_member_basic basic
        on exchange.mem_no = basic.mem_no
        <if test="slctType == 2">
            where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
        </if>
        <if test="slctType == 1">
            where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
        </if>
        <if test="slctType == 0">
            where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
        </if>
        and exchange.state = 0
        <choose>
            <when test="isSpecial == 0">
                and special.mem_no is null
            </when>
            <when test="isSpecial == 1">
                and special.mem_no is not null
            </when>
        </choose>
        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>

        union all
        -- 미처리 신청 별 수
        select ifnull(sum(byeol), 0) byeol
        from rd_data.tb_member_exchange exchange
            left join rd_admin.tb_special_dj special
                on exchange.mem_no = special.mem_no
                    and special.select_year = #{search_year}
                    and special.select_month = #{search_month}
            left join rd_data.tb_member_basic basic
            on exchange.mem_no = basic.mem_no
        <if test="slctType == 2">
            where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
        </if>
        <if test="slctType == 1">
            where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
        </if>
        <if test="slctType == 0">
            where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
        </if>
        and exchange.state = 0
        <choose>
            <when test="isSpecial == 0">
                and special.mem_no is null
            </when>
            <when test="isSpecial == 1">
                and special.mem_no is not null
            </when>
        </choose>
        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>

        union all
        -- 처리완료 건 수
        select ifnull(sum(cnt), 0) cnt
        from (
            select 1 cnt
            from rd_data.tb_member_exchange exchange
            left join rd_admin.tb_special_dj special
                on exchange.mem_no = special.mem_no
                    and special.select_year = #{search_year}
                    and special.select_month = #{search_month}
            left join rd_data.tb_member_basic basic
                on exchange.mem_no = basic.mem_no
            <if test="slctType == 2">
                where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
            </if>
            <if test="slctType == 1">
                where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
            </if>
            <if test="slctType == 0">
                where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
            </if>
            and exchange.state = 1
            <choose>
                <when test="isSpecial == 0">
                    and special.mem_no is null
                </when>
                <when test="isSpecial == 1">
                    and special.mem_no is not null
                </when>
            </choose>
            <if test='search_testId == 1'>
                and basic.inner = 0
            </if>
        )a

        union all
        -- 처리완료 금액
        select ifnull(sum(cash_real), 0) cash_basic
        from rd_data.tb_member_exchange exchange
            left join rd_admin.tb_special_dj special
                on exchange.mem_no = special.mem_no
                    and special.select_year = #{search_year}
                    and special.select_month = #{search_month}
            left join rd_data.tb_member_basic basic
                on exchange.mem_no = basic.mem_no
            <if test="slctType == 2">
                where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
            </if>
            <if test="slctType == 1">
                where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
            </if>
            <if test="slctType == 0">
                where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
            </if>
            and exchange.state = 1
            <choose>
                <when test="isSpecial == 0">
                    and special.mem_no is null
                </when>
                <when test="isSpecial == 1">
                    and special.mem_no is not null
                </when>
            </choose>
            <if test='search_testId == 1'>
                and basic.inner = 0
            </if>

        union all
        -- 처리완료 별 수
        select ifnull(sum(byeol), 0) byeol
        from rd_data.tb_member_exchange exchange
        left join rd_admin.tb_special_dj special
        on exchange.mem_no = special.mem_no
        and special.select_year = #{search_year}
        and special.select_month = #{search_month}
        left join rd_data.tb_member_basic basic
        on exchange.mem_no = basic.mem_no
        <if test="slctType == 2">
            where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
        </if>
        <if test="slctType == 1">
            where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
        </if>
        <if test="slctType == 0">
            where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
        </if>
        and exchange.state = 1
        <choose>
            <when test="isSpecial == 0">
                and special.mem_no is null
            </when>
            <when test="isSpecial == 1">
                and special.mem_no is not null
            </when>
        </choose>
        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>

        union all
        -- 불가 건 수
        select ifnull(sum(cnt), 0) cnt
        from (
        select 1 cnt
        from rd_data.tb_member_exchange exchange
        left join rd_admin.tb_special_dj special
        on exchange.mem_no = special.mem_no
        and special.select_year = #{search_year}
        and special.select_month = #{search_month}
        left join rd_data.tb_member_basic basic
        on exchange.mem_no = basic.mem_no
        <if test="slctType == 2">
            where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
        </if>
        <if test="slctType == 1">
            where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
        </if>
        <if test="slctType == 0">
            where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
        </if>
        and exchange.state = 2
        <choose>
            <when test="isSpecial == 0">
                and special.mem_no is null
            </when>
            <when test="isSpecial == 1">
                and special.mem_no is not null
            </when>
        </choose>
        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>
        )a

        union all
        -- 불가처리 금액
        select ifnull(sum(cash_real), 0) cash_basic
        from rd_data.tb_member_exchange exchange
        left join rd_admin.tb_special_dj special
        on exchange.mem_no = special.mem_no
        and special.select_year = #{search_year}
        and special.select_month = #{search_month}
        left join rd_data.tb_member_basic basic
        on exchange.mem_no = basic.mem_no
        <if test="slctType == 2">
            where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
        </if>
        <if test="slctType == 1">
            where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
        </if>
        <if test="slctType == 0">
            where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
        </if>
        and exchange.state = 2
        <choose>
            <when test="isSpecial == 0">
                and special.mem_no is null
            </when>
            <when test="isSpecial == 1">
                and special.mem_no is not null
            </when>
        </choose>
        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>

        union all
        -- 불가 별 수
        select ifnull(sum(byeol), 0) byeol
        from rd_data.tb_member_exchange exchange
            left join rd_admin.tb_special_dj special
                on exchange.mem_no = special.mem_no
                    and special.select_year = #{search_year}
                    and special.select_month = #{search_month}
            left join rd_data.tb_member_basic basic
            on exchange.mem_no = basic.mem_no
        <if test="slctType == 2">
            where DATE_FORMAT(exchange.reg_date , '%Y') = concat(#{search_year})
        </if>
        <if test="slctType == 1">
            where DATE_FORMAT(exchange.reg_date , '%Y%m') = concat(#{search_year}, #{search_month})
        </if>
        <if test="slctType == 0">
            where DATE_FORMAT(exchange.reg_date , '%Y%m%d') = concat(#{search_year}, #{search_month}, #{search_day})
        </if>
            and exchange.state = 2
            <choose>
                <when test="isSpecial == 0">
                    and special.mem_no is null
                </when>
                <when test="isSpecial == 1">
                    and special.mem_no is not null
                </when>
            </choose>
            <if test='search_testId == 1'>
                and basic.inner = 0
            </if>
    </select>

    <sql id="baseUpdateColumn">
        bank_code = #{bank_code}
        , account_name = #{account_name}
        , account_no = #{account_no}
        , social_no = #{social_no}
        , address_1 = #{address_1}
        , address_2 = #{address_2}
        , op_msg = #{op_msg}
        , op_name = #{op_name}
        , send_title = #{send_title}
        , send_cont = #{send_cont}
        , send_type = #{send_type}
        , last_upd_date = now()
    </sql>

    <update id="updateExchangeDetail" parameterType="com.dalbit.money.vo.Mon_ExchangeOutputVo">
        /* Mon_Exchange.xml - updateExchangeDetail */
        update rd_data.tb_member_exchange
        set <include refid="baseUpdateColumn" />
        where idx = #{idx}
    </update>

    <update id="updateExchangeComplete" parameterType="com.dalbit.money.vo.Mon_ExchangeOutputVo">
        /* Mon_Exchange.xml - updateExchangeComplete */
        update rd_data.tb_member_exchange
        set <include refid="baseUpdateColumn" />
            , state = #{state}
            , op_date = now()
        where idx = #{idx}
    </update>

    <update id="updateExchangeMultiComplete" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo">
        /* Mon_Exchange.xml - updateExchangeMultiComplete */
        update rd_data.tb_member_exchange
        set op_name = #{opName}
            , state = #{state}
            , op_date = now()
        where idx in
            <foreach collection="idxArr" item="idx" separator="," open="(" close=")">
                #{idx}
            </foreach>
    </update>

    <select id="callExchangeCancel" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_data.sp_member_exchange_cancel(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
    <select id ="testid_historyCnt" parameterType="string" resultType="integer">
        select count(*) as testid_historyCnt from rd_admin.tb_admin_test_account_history where mem_no=#{mem_no}
    </select>

    <sql id="baseEnable">
        select @RNUM := @RNUM + 1 rowNum
            , basic.mem_no
            , basic.mem_userid
            , basic.mem_nick
            , basic.mem_state
            , basic.mem_sex
            , (select image_profile from rd_data.tb_member_profile where mem_no=basic.mem_no) as image_profile
            , wallet.gold
            , ifnull(exchange.exchangeCnt, 0) exchangeCnt
            , ifnull(special.specialCnt, 0) specialCnt
        from rd_data.tb_member_basic basic
            inner join rd_data.tb_member_wallet wallet on basic.mem_no = wallet.mem_no and 570 <![CDATA[<=]]> wallet.gold
            left outer join (select mem_no, count(*) exchangeCnt from rd_data.tb_member_exchange where state = 1 group by mem_no) exchange on basic.mem_no = exchange.mem_no
            left outer join (select mem_no, count(mem_no) specialCnt from rd_admin.tb_special_dj where concat(select_year, select_month) = concat(DATE_FORMAT(now(), '%Y%m'),'') group by mem_no) special on basic.mem_no = special.mem_no
            , (select @RNUM := 0) r

        where 1 = 1

        <if test='search_value != null and search_value != ""'>
            <choose>
                <when test="search_type == 'mem_no'">
                    and basic.mem_no like CONCAT('%',#{search_value},'%')
                </when>
                <when test="search_type == 'user_id'">
                    and basic.mem_userid like CONCAT('%',#{search_value},'%')
                </when>
                <when test="search_type == 'mem_nick'">
                    and basic.mem_nick like CONCAT('%',#{search_value},'%')
                </when>
                <when test="search_type == 'mem_phone'">
                    and basic.mem_phone like CONCAT('%',#{search_value},'%')
                </when>
                <otherwise>
                    and (
                        basic.mem_no like CONCAT('%',#{search_value},'%')
                        or basic.mem_userid like CONCAT('%',#{search_value},'%')
                        or basic.mem_nick like CONCAT('%',#{search_value},'%')
                        or basic.mem_phone like CONCAT('%',#{search_value},'%')
                    )
                </otherwise>
            </choose>
        </if>

        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>

        <if test='search_exchangeYn == "Y"'>
            and exchange.exchangeCnt is not null
        </if>

        order by wallet.gold desc
    </sql>

    <select id="selectEnableCnt" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="com.dalbit.money.vo.Mon_EnableOutputVo">
        /* Mon_Exchange.xml - selectEnableCnt */
        select count(*) as enableCnt , sum(gold) as totalGold, sum(specialCnt) as totalSpecialCnt
        from(
            <include refid="baseEnable"/>
        ) a
    </select>

    <select id="selectEnableList" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="com.dalbit.money.vo.Mon_EnableOutputVo">
        /* Mon_Exchange.xml - selectEnableList */
        select list.*
        from (
            <include refid="baseEnable"/>
        ) list
        where list.rowNum between #{searchStartNo, jdbcType=INTEGER} and #{searchEndNo, jdbcType=INTEGER}
    </select>

    <select id="totalExchangeCash" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="com.dalbit.money.vo.Mon_EnableOutputVo">
        select ifnull(sum(cash_basic), 0) totalExchangeAmt
          from rd_data.tb_member_exchange exchange
          left join rd_admin.tb_special_dj special on exchange.mem_no = special.mem_no
          left join rd_data.tb_member_basic basic on exchange.mem_no = basic.mem_no
         where exchange.state = 1
        <if test='search_testId == 1'>
            and basic.inner = 0
        </if>
    </select>
</mapper>