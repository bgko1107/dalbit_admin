<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.money.dao.Mon_ExchangeDao" >

    <sql id="baseExchange">
        select @RNUM := @RNUM + 1 as rowNum,
               basic.mem_no,
               basic.mem_id,
               basic.mem_name,
               basic.mem_nick,
               basic.mem_state,
               exchange.byeol,
               exchange.cash_basic,
               exchange.withholding_tax,
               exchange.transfer_fee,
               exchange.benefit,
               exchange.cash_real,
               exchange.account_name,
               exchange.bank_code,
               exchange.account_no,
               exchange.social_no,
               exchange.phone_no,
               exchange.address_1,
               exchange.address_2,
               exchange.add_file1,
               exchange.add_file2,
               exchange.terms_agree,
               exchange.os_type,
               exchange.ip,
               exchange.confirm,
               exchange.state,
               exchange.op_msg,
               exchange.op_name,
               exchange.op_date,
               exchange.reg_date,
               exchange.last_upd_date,
               wallet.gold
        from rd_data.tb_member_exchange exchange
            inner join rd_data.tb_member_profile profile on exchange.mem_no = profile.mem_no
            inner join rd_data.tb_member_wallet wallet on exchange.mem_no = wallet.mem_no
             rd_data.tb_member_basic basic
            , (select @RNUM := 0) r
        where exchange.mem_no = basic.mem_no
            and exchange.mem_no = wallet.mem_no
            and profile.specialdj_badge = #{isSpecial}
        order by exchange.reg_date desc
    </sql>

    <select id="selectExchangeList" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="com.dalbit.money.vo.Mon_ExchangeOutputVo">
        /* Mon_Exchange.xml - selectExchangeList */
        select
            rowNum
            , mem_no
            , mem_id
            , mem_name
            , mem_nick
            , mem_state
            , byeol
            , cash_basic
            , withholding_tax
            , transfer_fee
            , benefit
            , cash_real
            , account_name
            , bank_code
            , account_no
            , social_no
            , phone_no
            , address_1
            , address_2
            , add_file1
            , add_file2
            , terms_agree
            , os_type
            , ip
            , confirm
            , state
            , op_msg
            , op_name
            , op_date
            , reg_date
            , last_upd_date
            , gold
            , ifnull(exchangeCnt, 0) exchangeCnt
            , ifnull(totalCashBasic, 0) totalCashBasic
            , ifnull(totalCashReal, 0) totalCashReal
        from (
            <include refid="baseExchange" />
        ) a
        left join
        (
            select
            mem_no memNo
            , count(mem_no) exchangeCnt
            , sum(cash_basic) totalCashBasic
            , sum(cash_real) totalCashReal
            from rd_data.tb_member_exchange
            where state = 1
            group by mem_no
        ) summary on a.mem_no = summary.memNo
    </select>

    <select id="selectExchangeCnt" parameterType="com.dalbit.money.vo.Mon_ExchangeInputVo" resultType="int">
        /* Mon_Exchange.xml - selectExchangeCnt */
        select count(*)
        from (
            <include refid="baseExchange" />
        ) a
    </select>

</mapper>