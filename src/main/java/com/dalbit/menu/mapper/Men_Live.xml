<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.menu.dao.Men_LiveDao" >

    <select id="callBroadCastRoomList" statementType="CALLABLE" parameterType="ProcedureVo" resultType="P_RoomListVo">
        call rd_data.sp_broadcast_room_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="getLiveList" parameterType="com.dalbit.menu.vo.LiveVo" resultType="com.dalbit.menu.vo.LiveVo">
        /* Men_Live.xml - getLiveList */
        select *
            from (
                select *, @RNUM := @RNUM + 1 as rowNum
                    from (
                        select prof.image_profile as image_profile
                            , bro.badge_recomm as badge_recomm
                            , bro.badge_popular as badge_popular
                            , bro.badge_newdj as badge_newdj
                            , mem.mem_id as mem_id
                            , mem.mem_nick as mem_nick
                            , (select sum(ifnull(money,0)) from rd_data.tb_member_wallet where mem_no = mem.mem_no) as money
                            , (select sum(ifnull(gold,0)) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as byeol
                            , (select count(if(gifted_mem_no!=0, gifted_mem_no, null)) from rd_data.tb_member_broadcast_item where mem_no = mem.mem_no) as gifted_mem_no
                            , (select count(if(mem_no!=0, mem_no, null)) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as airCount
                            , (select min(start_date) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as start_date
                            , (select sum(ifnull(airtime,0)) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as airTime
                            , (select sum(ifnull(count_entry,0)) from rd_data.tb_broadcast_room where mem_no = mem.mem_no) as count_entry
                            , (select sum(ifnull(count_good,0)) from rd_data.tb_broadcast_room where mem_no = mem.mem_no) as count_good
                            , bro.subject_type as subject_type
                        from rd_data.tb_member_basic mem
                            , rd_data.tb_member_profile prof
                            , rd_data.tb_broadcast_room bro
                        where mem.mem_no = prof.mem_no
                            and bro.state <![CDATA[ < ]]> 4
                            <if test='subject_type != null and subject_type !=""'>
                                and subject_type = #{subject_type}
                            </if>
                        group by mem.mem_no
                    ) a , (select @RNUM := 0) r
            order by
                    <if test='slctType == "1"'>
                        a.count_entry desc, a.byeol desc, a.start_date asc
                    </if>
                    <if test='slctType =="2"'>
                        a.byeol desc, a.count_entry desc, a.start_date asc
                    </if>
                    <if test='slctType =="3"'>
                         a.count_entry desc, a.byeol desc, a.start_date asc
                    </if>
                    <if test='slctType == "-1" or slctType == "0" or slctType == "" or slctType == null'>
                         a.count_entry desc, a.count_good desc, a.start_date asc
                    </if>
               ) b
        where
        rowNum between #{searchStartNo, jdbcType=INTEGER} and #{searchEndNo, jdbcType=INTEGER}
    </select>

    <select id="getLiveListCnt" parameterType="com.dalbit.menu.vo.LiveVo" resultType="integer">
        /* Men_Live.xml - getLiveListCnt*/
        select
          count(*)
            from(
            select *, @RNUM := @RNUM + 1 as rowNum
                from (
                    select prof.image_profile as image_profile
                    , bro.badge_recomm as badge_recomm
                    , bro.badge_popular as badge_popular
                    , bro.badge_newdj as badge_newdj
                    , mem.mem_id as mem_id
                    , mem.mem_nick as mem_nick
                    , (select sum(ifnull(money,0)) from rd_data.tb_member_wallet where mem_no = mem.mem_no) as money
                    , (select sum(ifnull(gold,0)) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as byeol
                    , (select count(if(gifted_mem_no!=0, gifted_mem_no, null)) from rd_data.tb_member_broadcast_item where mem_no = mem.mem_no) as gifted_mem_no
                    , (select count(if(mem_no!=0, mem_no, null)) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as airCount
                    , (select min(start_date) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as start_date
                    , (select sum(ifnull(airtime,0)) from rd_data.tb_member_broadcast_broadcasting where mem_no = mem.mem_no) as airTime
                    , (select sum(ifnull(count_entry,0)) from rd_data.tb_broadcast_room where mem_no = mem.mem_no) as count_entry
                    , (select sum(ifnull(count_good,0)) from rd_data.tb_broadcast_room where mem_no = mem.mem_no) as count_good
                    , bro.subject_type as subject_type
                    from rd_data.tb_member_basic mem
                    , rd_data.tb_member_profile prof
                    , rd_data.tb_broadcast_room bro
                    where mem.mem_no = prof.mem_no
                    and bro.state <![CDATA[ < ]]> 4
                    <if test='subject_type != null and subject_type !=""'>
                        and a.subject_type = #{subject_type}
                    </if>
                    group by mem.mem_no
                ) a , (select @RNUM := 0) r
            order by
            <if test='slctType == "1"'>
                a.count_entry desc, a.byeol desc, a.start_date asc
            </if>
            <if test='slctType =="2"'>
                a.byeol desc, a.count_entry desc, a.start_date asc
            </if>
            <if test='slctType =="3"'>
                a.count_entry desc, a.byeol desc, a.start_date asc
            </if>
            <if test='slctType == "-1" or slctType == "0" or slctType == "" or slctType == null'>
                a.count_entry desc, a.count_good desc, a.start_date asc
            </if>
        )as tb
    </select>
</mapper>